//===-- IntrinsicsTVM.td - Defines EraVM intrinsics --------*- tablegen -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file defines all of the EraVM specific intrinsics.
//
//===----------------------------------------------------------------------===//

let TargetPrefix = "eravm" in {

// Calls of an external contract.
def int_eravm_farcall: Intrinsic<[], [llvm_i256_ty], []>;
def int_eravm_delegatecall: Intrinsic<[], [llvm_i256_ty], []>;
def int_eravm_callcode: Intrinsic<[], [llvm_i256_ty], []>;
def int_eravm_staticcall: Intrinsic<[], [llvm_i256_ty], []>;
def int_eravm_farcall_rc: Intrinsic<[llvm_i256_ty], [llvm_i256_ty], []>;
def int_eravm_delegatecall_rc: Intrinsic<[llvm_i256_ty], [llvm_i256_ty], []>;
def int_eravm_callcode_rc: Intrinsic<[llvm_i256_ty], [llvm_i256_ty], []>;
def int_eravm_staticcall_rc: Intrinsic<[llvm_i256_ty], [llvm_i256_ty], []>;

// Get value from the context.
// Both intrinsics map to `context` instructions, but to differentiate side effects,
// context should not be used to get `ergs_left`
def int_eravm_context: Intrinsic<[llvm_i256_ty], [llvm_i256_ty], [IntrNoMem]>;
def int_eravm_ergsleft: Intrinsic<[llvm_i256_ty], [], []>;

// Persistent memory access.
def int_eravm_sstore: Intrinsic<[], [llvm_i256_ty, llvm_i256_ty, llvm_i256_ty], [IntrWriteMem, Throws]>;
def int_eravm_sload: Intrinsic<[llvm_i256_ty], [llvm_i256_ty, llvm_i256_ty], [IntrReadMem]>;
def int_eravm_event: Intrinsic<[], [llvm_i256_ty, llvm_i256_ty, llvm_i256_ty], [IntrHasSideEffects]>;
def int_eravm_tol1: Intrinsic<[], [llvm_i256_ty, llvm_i256_ty, llvm_i256_ty], [IntrHasSideEffects]>;
def int_eravm_precompile: Intrinsic<[], [llvm_i256_ty, llvm_i256_ty], [IntrHasSideEffects]>;

// Return with error.
def int_eravm_throw: Intrinsic<[], [llvm_i256_ty], [Throws, IntrNoReturn]>;

// Access to flags.
def int_eravm_getif : Intrinsic<[llvm_i256_ty], [llvm_i256_ty, llvm_i256_ty, llvm_i256_ty],
                                 [IntrNoMem]>;
def int_eravm_gtflag: Intrinsic<[llvm_i256_ty], [], [IntrHasSideEffects]>;
def int_eravm_ltflag: Intrinsic<[llvm_i256_ty], [], [IntrHasSideEffects]>;
def int_eravm_eqflag: Intrinsic<[llvm_i256_ty], [], [IntrHasSideEffects]>;

}
