//===------ EVMSubtarget.h - Define Subtarget for the EVM ----*- C++ -*----===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the EVM specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_EVM_EVMSUBTARGET_H
#define LLVM_LIB_TARGET_EVM_EVMSUBTARGET_H

#include "EVMFrameLowering.h"
#include "EVMISelLowering.h"
#include "EVMInstrInfo.h"
#include "EVMRegisterInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"

#define GET_SUBTARGETINFO_ENUM
#define GET_SUBTARGETINFO_HEADER
#include "EVMGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class EVMSubtarget final : public EVMGenSubtargetInfo {
private:
  EVMFrameLowering FrameLowering;
  EVMInstrInfo InstrInfo;
  EVMTargetLowering TLInfo;

public:
  // This constructor initializes the data members to match that
  // of the specified triple.
  EVMSubtarget(const Triple &TT, const std::string &CPU, const std::string &FS,
               const TargetMachine &TM);

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);

  const TargetFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const EVMInstrInfo *getInstrInfo() const override { return &InstrInfo; }

  const EVMRegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }
  const EVMTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }

  bool useAA() const override;
};
} // namespace llvm

#endif // LLVM_LIB_TARGET_EVM_EVMSUBTARGET_H
