; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -filetype=obj %s -o - | llvm-objdump --disassemble - | FileCheck %s
target datalayout = "E-p:256:256-i256:256:256-S256-a:256:256"
target triple = "evm"

@data1 = private unnamed_addr addrspace(4) constant [13 x i8] c"hello world\0A\00"
@data2 = private unnamed_addr addrspace(4) constant [5 x i8] c"world"

declare void @llvm.memcpy.p1.p4.i256(ptr addrspace(1) noalias nocapture writeonly, ptr addrspace(4) noalias nocapture readonly, i256, i1 immarg)

define void @test() noreturn {

; CHECK:  00000000 <test>:
; CHECK-NEXT:  0:  5b           	JUMPDEST
; CHECK-NEXT:  1:  60 0d        	PUSH1           0xD
; CHECK-NEXT:  3:  60 13        	PUSH1           0x13
; CHECK-NEXT:  5:  5f           	PUSH0
; CHECK-NEXT:  6:  39           	CODECOPY
; CHECK-NEXT:  7:  60 05        	PUSH1           0x5
; CHECK-NEXT:  9:  60 19        	PUSH1           0x19
; CHECK-NEXT:  b:  60 40        	PUSH1           0x40
; CHECK-NEXT:  d:  39           	CODECOPY
; CHECK-NEXT:  e:  60 80        	PUSH1           0x80
; CHECK-NEXT:  10: 5f           	PUSH0
; CHECK-NEXT:  11: fd           	REVERT
; CHECK-NEXT:  12: fe           	INVALID
; CHECK:  00000013 <code_data_section>:
; CHECK-NEXT:  13: 68 65 6c 6c 6f 20 77 6f 72 6c
; CHECK-NEXT:  1d: 64 0a 00

  call void @llvm.memcpy.p1.p4.i256(ptr addrspace(1) null, ptr addrspace(4) @data1, i256 13, i1 false)
  %dst = inttoptr i256 64 to ptr addrspace(1)
  call void @llvm.memcpy.p1.p4.i256(ptr addrspace(1) %dst, ptr addrspace(4) @data2, i256 5, i1 false)
  call void @llvm.evm.revert(ptr addrspace(1) null, i256 128)
  unreachable
}
