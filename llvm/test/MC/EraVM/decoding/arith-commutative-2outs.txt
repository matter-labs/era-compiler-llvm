# RUN: llvm-mc -arch=eravm --disassemble < %s | FileCheck %s

# CHECK:  .text

# mnemonic x {flag-preserving, flag-setting}
[0x00,0x00,0x00,0x00,0x43,0x21,0x00,0xa9]
[0x00,0x00,0x00,0x00,0x43,0x21,0x00,0xaa]
# CHECK:  mul    r1, r2, r3, r4
# CHECK:  mul!   r1, r2, r3, r4

# combinations of operand types
[0x00,0x00,0x00,0x00,0x43,0x21,0x00,0xa9]
[0x00,0x00,0x00,0x2a,0x43,0x20,0x00,0xc9]
[0x00,0x00,0x00,0x2a,0x43,0x21,0x00,0xd1]
[0x00,0x00,0x00,0x2a,0x43,0x21,0x00,0xc1]
[0x00,0x00,0x00,0x2a,0x43,0x21,0x00,0xb9]
[0x00,0x00,0x00,0x2a,0x43,0x21,0x00,0xb1]
[0x00,0x7b,0x00,0x00,0x43,0x21,0x00,0xaf]
[0x00,0x7b,0x00,0x2a,0x43,0x20,0x00,0xcf]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xd7]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xc7]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xbf]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xb7]
[0x00,0x7b,0x00,0x00,0x43,0x21,0x00,0xad]
[0x00,0x7b,0x00,0x2a,0x43,0x20,0x00,0xcd]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xd5]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xc5]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xbd]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xb5]
[0x00,0x7b,0x00,0x00,0x43,0x21,0x00,0xab]
[0x00,0x7b,0x00,0x2a,0x43,0x20,0x00,0xcb]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xd3]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xc3]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xbb]
[0x00,0x7b,0x00,0x2a,0x43,0x21,0x00,0xb3]
# CHECK:  mul    r1,               r2, r3, r4
# CHECK:  mul    42,               r2, r3, r4
# CHECK:  mul    code[r1+42],      r2, r3, r4
# CHECK:  mul    stack[42 + r1],   r2, r3, r4
# CHECK:  mul    stack-[42 + r1],  r2, r3, r4
# CHECK:  mul    stack-=[42 + r1], r2, r3, r4
# CHECK:  mul    r1,               r2, stack[123 + r3],   r4
# CHECK:  mul    42,               r2, stack[123 + r3],   r4
# CHECK:  mul    code[r1+42],      r2, stack[123 + r3],   r4
# CHECK:  mul    stack[42 + r1],   r2, stack[123 + r3],   r4
# CHECK:  mul    stack-[42 + r1],  r2, stack[123 + r3],   r4
# CHECK:  mul    stack-=[42 + r1], r2, stack[123 + r3],   r4
# CHECK:  mul    r1,               r2, stack-[123 + r3],  r4
# CHECK:  mul    42,               r2, stack-[123 + r3],  r4
# CHECK:  mul    code[r1+42],      r2, stack-[123 + r3],  r4
# CHECK:  mul    stack[42 + r1],   r2, stack-[123 + r3],  r4
# CHECK:  mul    stack-[42 + r1],  r2, stack-[123 + r3],  r4
# CHECK:  mul    stack-=[42 + r1], r2, stack-[123 + r3],  r4
# CHECK:  mul    r1,               r2, stack+=[123 + r3], r4
# CHECK:  mul    42,               r2, stack+=[123 + r3], r4
# CHECK:  mul    code[r1+42],      r2, stack+=[123 + r3], r4
# CHECK:  mul    stack[42 + r1],   r2, stack+=[123 + r3], r4
# CHECK:  mul    stack-[42 + r1],  r2, stack+=[123 + r3], r4
# CHECK:  mul    stack-=[42 + r1], r2, stack+=[123 + r3], r4
