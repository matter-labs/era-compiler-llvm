# RUN: llvm-mc -arch=eravm --disassemble < %s | FileCheck %s

# CHECK:  .text

# mnemonics (incl. ".s" modifier)
[0x00,0x00,0x00,0x00,0x03,0x21,0x03,0x4f]
[0x00,0x00,0x00,0x00,0x03,0x21,0x03,0x7f]
[0x00,0x00,0x00,0x00,0x03,0x21,0x03,0xdf]
[0x00,0x00,0x00,0x00,0x03,0x21,0x03,0xaf]
[0x00,0x00,0x00,0x2a,0x03,0x20,0x03,0x70]
[0x00,0x00,0x00,0x2a,0x03,0x20,0x03,0xa0]
[0x00,0x00,0x00,0x2a,0x03,0x20,0x04,0x00]
[0x00,0x00,0x00,0x2a,0x03,0x20,0x03,0xd0]
# CHECK:  addp      r1, r2, r3
# CHECK:  subp      r1, r2, r3
# CHECK:  shrnk     r1, r2, r3
# CHECK:  pack      r1, r2, r3
# CHECK:  addp.s    42, r2, r3
# CHECK:  subp.s    42, r2, r3
# CHECK:  shrnk.s   42, r2, r3
# CHECK:  pack.s    42, r2, r3

# operands (non-swapped version: 4 src modes x 4 dst modes)
[0x00,0x00,0x00,0x00,0x03,0x21,0x03,0x4f]
[0x00,0x00,0x00,0x01,0x03,0x21,0x03,0x67]
[0x00,0x00,0x00,0x01,0x03,0x21,0x03,0x5f]
[0x00,0x00,0x00,0x01,0x03,0x21,0x03,0x57]
[0x00,0x01,0x00,0x00,0x03,0x21,0x03,0x55]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x6d]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x65]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x5d]
[0x00,0x01,0x00,0x00,0x03,0x21,0x03,0x53]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x6b]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x63]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x5b]
[0x00,0x01,0x00,0x00,0x03,0x21,0x03,0x51]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x69]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x61]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x59]
# CHECK:  addp      r1, r2, r3
# CHECK:  addp      stack[1 + r1], r2, r3
# CHECK:  addp      stack-[1 + r1], r2, r3
# CHECK:  addp      stack-=[1 + r1], r2, r3
# CHECK:  addp      r1, r2, stack[1 + r3]
# CHECK:  addp      stack[1 + r1], r2, stack[1 + r3]
# CHECK:  addp      stack-[1 + r1], r2, stack[1 + r3]
# CHECK:  addp      stack-=[1 + r1], r2, stack[1 + r3]
# CHECK:  addp      r1, r2, stack-[1 + r3]
# CHECK:  addp      stack[1 + r1], r2, stack-[1 + r3]
# CHECK:  addp      stack-[1 + r1], r2, stack-[1 + r3]
# CHECK:  addp      stack-=[1 + r1], r2, stack-[1 + r3]
# CHECK:  addp      r1, r2, stack+=[1 + r3]
# CHECK:  addp      stack[1 + r1], r2, stack+=[1 + r3]
# CHECK:  addp      stack-[1 + r1], r2, stack+=[1 + r3]
# CHECK:  addp      stack-=[1 + r1], r2, stack+=[1 + r3]

# operands (swapped version: 6 src modes x 4 dst modes)
[0x00,0x00,0x00,0x00,0x03,0x21,0x03,0x50]
[0x00,0x00,0x00,0x2a,0x03,0x20,0x03,0x70]
[0x00,0x00,0x00,0x01,0x03,0x21,0x03,0x68]
[0x00,0x00,0x00,0x01,0x03,0x21,0x03,0x60]
[0x00,0x00,0x00,0x01,0x03,0x21,0x03,0x58]
[0x00,0x00,0x00,0x01,0x03,0x21,0x03,0x78]
[0x00,0x01,0x00,0x00,0x03,0x21,0x03,0x56]
[0x00,0x01,0x00,0x2a,0x03,0x20,0x03,0x76]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x6e]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x66]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x5e]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x7e]
[0x00,0x01,0x00,0x00,0x03,0x21,0x03,0x54]
[0x00,0x01,0x00,0x2a,0x03,0x20,0x03,0x74]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x6c]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x64]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x5c]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x7c]
[0x00,0x01,0x00,0x00,0x03,0x21,0x03,0x52]
[0x00,0x01,0x00,0x2a,0x03,0x20,0x03,0x72]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x6a]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x62]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x5a]
[0x00,0x01,0x00,0x01,0x03,0x21,0x03,0x7a]
# CHECK:  addp.s    r1, r2, r3
# CHECK:  addp.s    42, r2, r3
# CHECK:  addp.s    stack[1 + r1], r2, r3
# CHECK:  addp.s    stack-[1 + r1], r2, r3
# CHECK:  addp.s    stack-=[1 + r1], r2, r3
# CHECK:  addp.s    code[r1+1], r2, r3
# CHECK:  addp.s    r1, r2, stack[1 + r3]
# CHECK:  addp.s    42, r2, stack[1 + r3]
# CHECK:  addp.s    stack[1 + r1], r2, stack[1 + r3]
# CHECK:  addp.s    stack-[1 + r1], r2, stack[1 + r3]
# CHECK:  addp.s    stack-=[1 + r1], r2, stack[1 + r3]
# CHECK:  addp.s    code[r1+1], r2, stack[1 + r3]
# CHECK:  addp.s    r1, r2, stack-[1 + r3]
# CHECK:  addp.s    42, r2, stack-[1 + r3]
# CHECK:  addp.s    stack[1 + r1], r2, stack-[1 + r3]
# CHECK:  addp.s    stack-[1 + r1], r2, stack-[1 + r3]
# CHECK:  addp.s    stack-=[1 + r1], r2, stack-[1 + r3]
# CHECK:  addp.s    code[r1+1], r2, stack-[1 + r3]
# CHECK:  addp.s    r1, r2, stack+=[1 + r3]
# CHECK:  addp.s    42, r2, stack+=[1 + r3]
# CHECK:  addp.s    stack[1 + r1], r2, stack+=[1 + r3]
# CHECK:  addp.s    stack-[1 + r1], r2, stack+=[1 + r3]
# CHECK:  addp.s    stack-=[1 + r1], r2, stack+=[1 + r3]
# CHECK:  addp.s    code[r1+1], r2, stack+=[1 + r3]
