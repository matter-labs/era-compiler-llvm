# RUN: llvm-mc -arch=eravm --disassemble < %s | FileCheck %s

# CHECK:  .text

# mnemonic x {flag-preserving, flag-setting}
[0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x19]
[0x00,0x00,0x00,0x00,0x03,0x21,0x01,0x6f]
[0x00,0x00,0x00,0x00,0x03,0x21,0x01,0x9f]
[0x00,0x00,0x00,0x00,0x03,0x21,0x01,0x3f]
[0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x1a]
[0x00,0x00,0x00,0x00,0x03,0x21,0x01,0x70]
[0x00,0x00,0x00,0x00,0x03,0x21,0x01,0xa0]
[0x00,0x00,0x00,0x00,0x03,0x21,0x01,0x40]
# CHECK:  add    r1, r2, r3
# CHECK:  and    r1, r2, r3
# CHECK:  or     r1, r2, r3
# CHECK:  xor    r1, r2, r3
# CHECK:  add!    r1, r2, r3
# CHECK:  and!    r1, r2, r3
# CHECK:  or!     r1, r2, r3
# CHECK:  xor!    r1, r2, r3

# combinations of operand types
[0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x19]
[0x00,0x00,0x00,0x2a,0x03,0x20,0x00,0x39]
[0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x41]
[0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x31]
[0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x29]
[0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x21]
[0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x1f]
[0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x3f]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x47]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x37]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x2f]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x27]
[0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x1d]
[0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x3d]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x45]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x35]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x2d]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x25]
[0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x1b]
[0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x3b]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x43]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x33]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x2b]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x23]
# CHECK:  add    r1,               r2, r3
# CHECK:  add    42,               r2, r3
# CHECK:  add    code[r1+42],      r2, r3
# CHECK:  add    stack[42 + r1],   r2, r3
# CHECK:  add    stack-[42 + r1],  r2, r3
# CHECK:  add    stack-=[42 + r1], r2, r3
# CHECK:  add    r1,               r2, stack[123 + r3]
# CHECK:  add    42,               r2, stack[123 + r3]
# CHECK:  add    code[r1+42],      r2, stack[123 + r3]
# CHECK:  add    stack[42 + r1],   r2, stack[123 + r3]
# CHECK:  add    stack-[42 + r1],  r2, stack[123 + r3]
# CHECK:  add    stack-=[42 + r1], r2, stack[123 + r3]
# CHECK:  add    r1,               r2, stack-[123 + r3]
# CHECK:  add    42,               r2, stack-[123 + r3]
# CHECK:  add    code[r1+42],      r2, stack-[123 + r3]
# CHECK:  add    stack[42 + r1],   r2, stack-[123 + r3]
# CHECK:  add    stack-[42 + r1],  r2, stack-[123 + r3]
# CHECK:  add    stack-=[42 + r1], r2, stack-[123 + r3]
# CHECK:  add    r1,               r2, stack+=[123 + r3]
# CHECK:  add    42,               r2, stack+=[123 + r3]
# CHECK:  add    code[r1+42],      r2, stack+=[123 + r3]
# CHECK:  add    stack[42 + r1],   r2, stack+=[123 + r3]
# CHECK:  add    stack-[42 + r1],  r2, stack+=[123 + r3]
# CHECK:  add    stack-=[42 + r1], r2, stack+=[123 + r3]
