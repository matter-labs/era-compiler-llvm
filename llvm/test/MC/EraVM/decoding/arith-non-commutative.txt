# RUN: llvm-mc -arch=eravm --disassemble < %s | FileCheck %s

# CHECK:  .text

# mnemonic x modifiers
[0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x49]
[0x00,0x00,0x00,0x00,0x03,0x21,0x01,0xcf]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x2f]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x8f]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0xef]
# CHECK:  sub       r1, r2, r3
# CHECK:  shl       r1, r2, r3
# CHECK:  shr       r1, r2, r3
# CHECK:  rol       r1, r2, r3
# CHECK:  ror       r1, r2, r3
[0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x4a]
[0x00,0x00,0x00,0x00,0x03,0x21,0x01,0xd0]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x30]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x90]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0xf0]
# CHECK:  sub.s     r1, r2, r3
# CHECK:  shl.s     r1, r2, r3
# CHECK:  shr.s     r1, r2, r3
# CHECK:  rol.s     r1, r2, r3
# CHECK:  ror.s     r1, r2, r3
[0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x4b]
[0x00,0x00,0x00,0x00,0x03,0x21,0x01,0xd1]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x31]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x91]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0xf1]
# CHECK:  sub!      r1, r2, r3
# CHECK:  shl!      r1, r2, r3
# CHECK:  shr!      r1, r2, r3
# CHECK:  rol!      r1, r2, r3
# CHECK:  ror!      r1, r2, r3
[0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x4c]
[0x00,0x00,0x00,0x00,0x03,0x21,0x01,0xd2]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x32]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x92]
[0x00,0x00,0x00,0x00,0x03,0x21,0x02,0xf2]
# CHECK:  sub.s!    r1, r2, r3
# CHECK:  shl.s!    r1, r2, r3
# CHECK:  shr.s!    r1, r2, r3
# CHECK:  rol.s!    r1, r2, r3
# CHECK:  ror.s!    r1, r2, r3

# combinations of operand types
[0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x49]
[0x00,0x00,0x00,0x2a,0x03,0x20,0x00,0x89]
[0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x99]
[0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x79]
[0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x69]
[0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x59]
[0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x55]
[0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x95]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0xa5]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x85]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x75]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x65]
[0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x51]
[0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x91]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0xa1]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x81]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x71]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x61]
[0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x4d]
[0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x8d]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x9d]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x7d]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x6d]
[0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x5d]
# CHECK:  sub    r1,               r2, r3
# CHECK:  sub    42,               r2, r3
# CHECK:  sub    code[r1+42],      r2, r3
# CHECK:  sub    stack[42 + r1],   r2, r3
# CHECK:  sub    stack-[42 + r1],  r2, r3
# CHECK:  sub    stack-=[42 + r1], r2, r3
# CHECK:  sub    r1,               r2, stack[123 + r3]
# CHECK:  sub    42,               r2, stack[123 + r3]
# CHECK:  sub    code[r1+42],      r2, stack[123 + r3]
# CHECK:  sub    stack[42 + r1],   r2, stack[123 + r3]
# CHECK:  sub    stack-[42 + r1],  r2, stack[123 + r3]
# CHECK:  sub    stack-=[42 + r1], r2, stack[123 + r3]
# CHECK:  sub    r1,               r2, stack-[123 + r3]
# CHECK:  sub    42,               r2, stack-[123 + r3]
# CHECK:  sub    code[r1+42],      r2, stack-[123 + r3]
# CHECK:  sub    stack[42 + r1],   r2, stack-[123 + r3]
# CHECK:  sub    stack-[42 + r1],  r2, stack-[123 + r3]
# CHECK:  sub    stack-=[42 + r1], r2, stack-[123 + r3]
# CHECK:  sub    r1,               r2, stack+=[123 + r3]
# CHECK:  sub    42,               r2, stack+=[123 + r3]
# CHECK:  sub    code[r1+42],      r2, stack+=[123 + r3]
# CHECK:  sub    stack[42 + r1],   r2, stack+=[123 + r3]
# CHECK:  sub    stack-[42 + r1],  r2, stack+=[123 + r3]
# CHECK:  sub    stack-=[42 + r1], r2, stack+=[123 + r3]
