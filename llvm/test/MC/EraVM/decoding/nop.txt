# RUN: llvm-mc -arch=eravm --disassemble < %s | FileCheck %s

# CHECK:  .text

# mnemonic
[0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x01]
# CHECK:  nop   r1, r2, r3

# combinations of operand types
[0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x01]
[0x00,0x00,0x00,0x2a,0x03,0x20,0x00,0x11]
[0x00,0x00,0x00,0x01,0x03,0x21,0x00,0x0d]
[0x00,0x00,0x00,0x01,0x03,0x21,0x00,0x09]
[0x00,0x00,0x00,0x01,0x03,0x21,0x00,0x05]
[0x00,0x00,0x00,0x01,0x03,0x21,0x00,0x15]
[0x00,0x01,0x00,0x00,0x03,0x21,0x00,0x04]
[0x00,0x01,0x00,0x2a,0x03,0x20,0x00,0x14]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x10]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x0c]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x08]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x18]
[0x00,0x01,0x00,0x00,0x03,0x21,0x00,0x03]
[0x00,0x01,0x00,0x2a,0x03,0x20,0x00,0x13]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x0f]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x0b]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x07]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x17]
[0x00,0x01,0x00,0x00,0x03,0x21,0x00,0x02]
[0x00,0x01,0x00,0x2a,0x03,0x20,0x00,0x12]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x0e]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x0a]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x06]
[0x00,0x01,0x00,0x01,0x03,0x21,0x00,0x16]
# CHECK:  nop   r1, r2, r3
# CHECK:  nop   42, r2, r3
# CHECK:  nop   stack[1 + r1], r2, r3
# CHECK:  nop   stack-[1 + r1], r2, r3
# CHECK:  nop   stack-=[1 + r1], r2, r3
# CHECK:  nop   code[r1+1], r2, r3
# CHECK:  nop   r1, r2, stack[1 + r3]
# CHECK:  nop   42, r2, stack[1 + r3]
# CHECK:  nop   stack[1 + r1], r2, stack[1 + r3]
# CHECK:  nop   stack-[1 + r1], r2, stack[1 + r3]
# CHECK:  nop   stack-=[1 + r1], r2, stack[1 + r3]
# CHECK:  nop   code[r1+1], r2, stack[1 + r3]
# CHECK:  nop   r1, r2, stack-[1 + r3]
# CHECK:  nop   42, r2, stack-[1 + r3]
# CHECK:  nop   stack[1 + r1], r2, stack-[1 + r3]
# CHECK:  nop   stack-[1 + r1], r2, stack-[1 + r3]
# CHECK:  nop   stack-=[1 + r1], r2, stack-[1 + r3]
# CHECK:  nop   code[r1+1], r2, stack-[1 + r3]
# CHECK:  nop   r1, r2, stack+=[1 + r3]
# CHECK:  nop   42, r2, stack+=[1 + r3]
# CHECK:  nop   stack[1 + r1], r2, stack+=[1 + r3]
# CHECK:  nop   stack-[1 + r1], r2, stack+=[1 + r3]
# CHECK:  nop   stack-=[1 + r1], r2, stack+=[1 + r3]
# CHECK:  nop   code[r1+1], r2, stack+=[1 + r3]
