; RUN: not llvm-mc -triple eravm -o - < %s 2>&1 > %t.stdout | FileCheck %s
; RUN: FileCheck --check-prefix=STDOUT %s < %t.stdout

; STDOUT:     .text
; STDOUT-NOT: {{.+}}

; operands: only accept either register or stack input as the pointer operand
;           (only affects the non-swapped version).
; Note that the step 2 of the semantic described by the spec for pointer
; modification instructions is "Ensure the op_1 is tagged as a pointer and
; op_2 is not tagged as a pointer. Otherwise panic" and that only registers
; and stack can be tagged.
  addp    42, r2, r3
  addp    code[r1 + 1], r2, r3
  addp    42, r2, stack[r3 + 1]
  addp    code[r1 + 1], r2, stack[r3 + 1]
  addp    42, r2, stack-[r3 + 1]
  addp    code[r1 + 1], r2, stack-[r3 + 1]
  addp    42, r2, stack+=[r3 + 1]
  addp    code[r1 + 1], r2, stack+=[r3 + 1]

; briefly check the three other instructions
  subp    42, r2, r3
  subp    code[r1 + 1], r2, r3
  shrnk   42, r2, r3
  shrnk   code[r1 + 1], r2, r3
  pack    42, r2, r3
  pack    code[r1 + 1], r2, r3


; COM: Autogenerated checks below, see README.md.
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    addp    42, r2, r3
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    addp    code[r1 + 1], r2, r3
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    addp    42, r2, stack[r3 + 1]
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    addp    code[r1 + 1], r2, stack[r3 + 1]
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    addp    42, r2, stack-[r3 + 1]
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    addp    code[r1 + 1], r2, stack-[r3 + 1]
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    addp    42, r2, stack+=[r3 + 1]
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    addp    code[r1 + 1], r2, stack+=[r3 + 1]
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    subp    42, r2, r3
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    subp    code[r1 + 1], r2, r3
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    shrnk   42, r2, r3
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    shrnk   code[r1 + 1], r2, r3
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    pack    42, r2, r3
; CHECK-NEXT:            ^
; CHECK:       <stdin>:{{[0-9]+}}:11: error: cannot parse operand
; CHECK-NEXT:    pack    code[r1 + 1], r2, r3
; CHECK-NEXT:            ^
