; RUN: llvm-mc -triple eravm -filetype=asm %s -o - | FileCheck %s

  .text
foo:

; src: register
  add       r1, r2, r3
; src: unsigned 16-bit immediate
  add       42, r2, r3
  add       65535, r2, r3
  add       0x4321, r2, r3
; src: code
  add       code[r0 + 0], r2, r3
  add       code[r1], r2, r3
  add       code[42], r2, r3
  add       code[r1 + 42], r2, r3
; src: stack, absolute
  add       stack[r0 + 0], r2, r3
  add       stack[r1], r2, r3
  add       stack[42], r2, r3
  add       stack[r1 + 42], r2, r3
; src: stack, absolute (alternative syntax)
  add       stack=[r0 + 0], r2, r3
  add       stack=[r1], r2, r3
  add       stack=[42], r2, r3
  add       stack=[r1 + 42], r2, r3
; src: stack, SP-relative
  add       stack-[r0 + 0], r2, r3
  add       stack-[r1], r2, r3
  add       stack-[42], r2, r3
  add       stack-[r1 + 42], r2, r3
; src: stack, SP-relative, SP-decrementing
  add       stack-=[r0 + 0], r2, r3
  add       stack-=[r1], r2, r3
  add       stack-=[42], r2, r3
  add       stack-=[r1 + 42], r2, r3

; different subscript syntax variants
  add       stack[r1], r2, r3
  add       stack[42], r2, r3
  add       stack[-42], r2, r3
  add       stack[r1 + 42], r2, r3
  add       stack[r1 - 42], r2, r3
  add       stack[42 + r1], r2, r3
  add       stack[-42 + r1], r2, r3

; dst: register
  add       r1, r2, r3
; dst: stack, absolute
  add       r1, r2, stack[r0 + 0]
  add       r1, r2, stack[r1]
  add       r1, r2, stack[42]
  add       r1, r2, stack[r1 + 42]
; dst: stack, absolute (alternative syntax)
  add       r1, r2, stack=[r0 + 0]
  add       r1, r2, stack=[r1]
  add       r1, r2, stack=[42]
  add       r1, r2, stack=[r1 + 42]
; dst: stack, SP-relative
  add       r1, r2, stack-[r0 + 0]
  add       r1, r2, stack-[r1]
  add       r1, r2, stack-[42]
  add       r1, r2, stack-[r1 + 42]
; dst: stack, SP-relative, SP-incrementing
  add       r1, r2, stack+=[r0 + 0]
  add       r1, r2, stack+=[r1]
  add       r1, r2, stack+=[42]
  add       r1, r2, stack+=[r1 + 42]


; COM: Autogenerated checks below, see README.md.
; CHECK:  .text
; CHECK:foo:

; CHECK:  add  r1, r2, r3
; CHECK:  add  42, r2, r3
; CHECK:  add  65535, r2, r3
; CHECK:  add  17185, r2, r3
; CHECK:  add  code[0], r2, r3
; CHECK:  add  code[r1], r2, r3
; CHECK:  add  code[42], r2, r3
; CHECK:  add  code[r1+42], r2, r3
; CHECK:  add  stack[r0], r2, r3
; CHECK:  add  stack[r1], r2, r3
; CHECK:  add  stack[42], r2, r3
; CHECK:  add  stack[42 + r1], r2, r3
; CHECK:  add  stack[r0], r2, r3
; CHECK:  add  stack[r1], r2, r3
; CHECK:  add  stack[42], r2, r3
; CHECK:  add  stack[42 + r1], r2, r3
; CHECK:  add  stack-[0 + r0], r2, r3
; CHECK:  add  stack-[0 + r1], r2, r3
; CHECK:  add  stack-[42], r2, r3
; CHECK:  add  stack-[42 + r1], r2, r3
; CHECK:  add  stack-=[0 + r0], r2, r3
; CHECK:  add  stack-=[0 + r1], r2, r3
; CHECK:  add  stack-=[42], r2, r3
; CHECK:  add  stack-=[42 + r1], r2, r3

; CHECK:  add  stack[r1], r2, r3
; CHECK:  add  stack[42], r2, r3
; CHECK:  add  stack[65494], r2, r3
; CHECK:  add  stack[42 + r1], r2, r3
; CHECK:  add  stack[65494 + r1], r2, r3
; CHECK:  add  stack[42 + r1], r2, r3
; CHECK:  add  stack[65494 + r1], r2, r3

; CHECK:  add  r1, r2, r3
; CHECK:  add  r1, r2, stack[r0]
; CHECK:  add  r1, r2, stack[r1]
; CHECK:  add  r1, r2, stack[42]
; CHECK:  add  r1, r2, stack[42 + r1]
; CHECK:  add  r1, r2, stack[r0]
; CHECK:  add  r1, r2, stack[r1]
; CHECK:  add  r1, r2, stack[42]
; CHECK:  add  r1, r2, stack[42 + r1]
; CHECK:  add  r1, r2, stack-[0 + r0]
; CHECK:  add  r1, r2, stack-[0 + r1]
; CHECK:  add  r1, r2, stack-[42]
; CHECK:  add  r1, r2, stack-[42 + r1]
; CHECK:  add  r1, r2, stack+=[0 + r0]
; CHECK:  add  r1, r2, stack+=[0 + r1]
; CHECK:  add  r1, r2, stack+=[42]
; CHECK:  add  r1, r2, stack+=[42 + r1]
