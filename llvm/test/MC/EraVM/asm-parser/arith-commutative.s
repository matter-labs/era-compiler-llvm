; RUN: llvm-mc -triple eravm -filetype=asm %s -o - | FileCheck %s

  .text
foo:

; mnemonics
  add       r1, r2, r3
  and       r1, r2, r3
  or        r1, r2, r3
  xor       r1, r2, r3

; modifiers (all combinations of "!" and ".condition", ordered exactly like this, ".s" is not supported)
  add       r1, r2, r3
  add!      r1, r2, r3
  add.lt    r1, r2, r3
  add!.lt   r1, r2, r3

; operands (6 src modes x 4 dst modes)
  add       r1, r2, r3
  add       42, r2, r3
  add       stack[r1 + 1], r2, r3
  add       stack-[r1 + 1], r2, r3
  add       stack-=[r1 + 1], r2, r3
  add       code[r1 + 1], r2, r3
  add       r1, r2, stack[r3 + 1]
  add       42, r2, stack[r3 + 1]
  add       stack[r1 + 1], r2, stack[r3 + 1]
  add       stack-[r1 + 1], r2, stack[r3 + 1]
  add       stack-=[r1 + 1], r2, stack[r3 + 1]
  add       code[r1 + 1], r2, stack[r3 + 1]
  add       r1, r2, stack-[r3 + 1]
  add       42, r2, stack-[r3 + 1]
  add       stack[r1 + 1], r2, stack-[r3 + 1]
  add       stack-[r1 + 1], r2, stack-[r3 + 1]
  add       stack-=[r1 + 1], r2, stack-[r3 + 1]
  add       code[r1 + 1], r2, stack-[r3 + 1]
  add       r1, r2, stack+=[r3 + 1]
  add       42, r2, stack+=[r3 + 1]
  add       stack[r1 + 1], r2, stack+=[r3 + 1]
  add       stack-[r1 + 1], r2, stack+=[r3 + 1]
  add       stack-=[r1 + 1], r2, stack+=[r3 + 1]
  add       code[r1 + 1], r2, stack+=[r3 + 1]


; COM: Autogenerated checks below, see README.md.
; CHECK:  .text
; CHECK:foo:

; CHECK:  add  r1, r2, r3
; CHECK:  and  r1, r2, r3
; CHECK:  or   r1, r2, r3
; CHECK:  xor  r1, r2, r3

; CHECK:  add  r1, r2, r3
; CHECK:  add! r1, r2, r3
; CHECK:  add.lt       r1, r2, r3
; CHECK:  add!.lt      r1, r2, r3

; CHECK:  add  r1, r2, r3
; CHECK:  add  42, r2, r3
; CHECK:  add  stack[1 + r1], r2, r3
; CHECK:  add  stack-[1 + r1], r2, r3
; CHECK:  add  stack-=[1 + r1], r2, r3
; CHECK:  add  code[r1+1], r2, r3
; CHECK:  add  r1, r2, stack[1 + r3]
; CHECK:  add  42, r2, stack[1 + r3]
; CHECK:  add  stack[1 + r1], r2, stack[1 + r3]
; CHECK:  add  stack-[1 + r1], r2, stack[1 + r3]
; CHECK:  add  stack-=[1 + r1], r2, stack[1 + r3]
; CHECK:  add  code[r1+1], r2, stack[1 + r3]
; CHECK:  add  r1, r2, stack-[1 + r3]
; CHECK:  add  42, r2, stack-[1 + r3]
; CHECK:  add  stack[1 + r1], r2, stack-[1 + r3]
; CHECK:  add  stack-[1 + r1], r2, stack-[1 + r3]
; CHECK:  add  stack-=[1 + r1], r2, stack-[1 + r3]
; CHECK:  add  code[r1+1], r2, stack-[1 + r3]
; CHECK:  add  r1, r2, stack+=[1 + r3]
; CHECK:  add  42, r2, stack+=[1 + r3]
; CHECK:  add  stack[1 + r1], r2, stack+=[1 + r3]
; CHECK:  add  stack-[1 + r1], r2, stack+=[1 + r3]
; CHECK:  add  stack-=[1 + r1], r2, stack+=[1 + r3]
; CHECK:  add  code[r1+1], r2, stack+=[1 + r3]
