; RUN: llvm-mc -triple eravm -filetype=asm %s -o - | FileCheck %s

  .text
foo:

; canonical NOP: three R0 operands
  nop
  nop.lt
; the same in generic form
  nop       r0, r0, r0
  nop.lt    r0, r0, r0

; incsp: inputs are r0, output is stack+=[...]
  nop       stack+=[r0 + 0]
  nop       stack+=[r1]
  nop       stack+=[42]
  nop       stack+=[r1 + 42]
  nop.lt    stack+=[r0 + 0]
  nop.lt    stack+=[r1]
  nop.lt    stack+=[42]
  nop.lt    stack+=[r1 + 42]
; the same in generic form
  nop       r0, r0, stack+=[r0 + 0]
  nop       r0, r0, stack+=[r1]
  nop       r0, r0, stack+=[42]
  nop       r0, r0, stack+=[r1 + 42]
  nop.lt    r0, r0, stack+=[r0 + 0]
  nop.lt    r0, r0, stack+=[r1]
  nop.lt    r0, r0, stack+=[42]
  nop.lt    r0, r0, stack+=[r1 + 42]

; decsp: first input is stack-=[...], output and second input are r0
  nop       stack-=[r0 + 0]
  nop       stack-=[r1]
  nop       stack-=[42]
  nop       stack-=[r1 + 42]
  nop.lt    stack-=[r0 + 0]
  nop.lt    stack-=[r1]
  nop.lt    stack-=[42]
  nop.lt    stack-=[r1 + 42]
; the same in generic form
  nop       stack-=[r0 + 0], r0, r0
  nop       stack-=[r1], r0, r0
  nop       stack-=[42], r0, r0
  nop       stack-=[r1 + 42], r0, r0
  nop.lt    stack-=[r0 + 0], r0, r0
  nop.lt    stack-=[r1], r0, r0
  nop.lt    stack-=[42], r0, r0
  nop.lt    stack-=[r1 + 42], r0, r0

; COM: Autogenerated checks below, see README.md.
; CHECK:  .text
; CHECK:foo:

; CHECK:  nop
; CHECK:  nop.lt
; CHECK:  nop
; CHECK:  nop.lt

; CHECK:  nop   stack+=[0 + r0]
; CHECK:  nop   stack+=[0 + r1]
; CHECK:  nop   stack+=[42]
; CHECK:  nop   stack+=[42 + r1]
; CHECK:  nop.lt        stack+=[0 + r0]
; CHECK:  nop.lt        stack+=[0 + r1]
; CHECK:  nop.lt        stack+=[42]
; CHECK:  nop.lt        stack+=[42 + r1]
; CHECK:  nop   stack+=[0 + r0]
; CHECK:  nop   stack+=[0 + r1]
; CHECK:  nop   stack+=[42]
; CHECK:  nop   stack+=[42 + r1]
; CHECK:  nop.lt        stack+=[0 + r0]
; CHECK:  nop.lt        stack+=[0 + r1]
; CHECK:  nop.lt        stack+=[42]
; CHECK:  nop.lt        stack+=[42 + r1]

; CHECK:  nop   stack-=[0 + r0]
; CHECK:  nop   stack-=[0 + r1]
; CHECK:  nop   stack-=[42]
; CHECK:  nop   stack-=[42 + r1]
; CHECK:  nop.lt        stack-=[0 + r0]
; CHECK:  nop.lt        stack-=[0 + r1]
; CHECK:  nop.lt        stack-=[42]
; CHECK:  nop.lt        stack-=[42 + r1]
; CHECK:  nop   stack-=[0 + r0]
; CHECK:  nop   stack-=[0 + r1]
; CHECK:  nop   stack-=[42]
; CHECK:  nop   stack-=[42 + r1]
; CHECK:  nop.lt        stack-=[0 + r0]
; CHECK:  nop.lt        stack-=[0 + r1]
; CHECK:  nop.lt        stack-=[42]
; CHECK:  nop.lt        stack-=[42 + r1]
