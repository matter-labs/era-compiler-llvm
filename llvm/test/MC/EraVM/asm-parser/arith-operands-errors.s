; RUN: not llvm-mc -triple eravm -o - < %s 2>&1 > %t.stdout | FileCheck %s
; RUN: FileCheck --check-prefix=STDOUT %s < %t.stdout

; STDOUT:     .text
; STDOUT-NOT: {{.+}}

; src: unsigned 16-bit immediate
  add       -42, r2, r3
  add       100000, r2, r3

; incorrect use of SP-modifying operands (in vs. out)
  add    stack+=[1], r0, r0
  add    r0, r0, stack-=[1]

; incorrect "subscript" index
  add    stack[-r1], r1, r2
  add    stack[r1 + r1], r1, r2
  add    stack[1 + 2], r1, r2

; COM: Autogenerated checks below, see README.md.
; CHECK:       <stdin>:{{[0-9]+}}:13: error: negative immediate operands are not supported
; CHECK-NEXT:    add       -42, r2, r3
; CHECK-NEXT:              ^
; CHECK:       <stdin>:{{[0-9]+}}:13: error: uint16 immediate expected
; CHECK-NEXT:    add       100000, r2, r3
; CHECK-NEXT:              ^
; CHECK:       <stdin>:{{[0-9]+}}:3: error: cannot parse instruction
; CHECK-NEXT:    add    stack+=[1], r0, r0
; CHECK-NEXT:    ^
; CHECK:       <stdin>:{{[0-9]+}}:3: error: cannot parse instruction
; CHECK-NEXT:    add    r0, r0, stack-=[1]
; CHECK-NEXT:    ^
; CHECK:       <stdin>:{{[0-9]+}}:17: error: integer addend expected
; CHECK-NEXT:    add    stack[-r1], r1, r2
; CHECK-NEXT:                  ^
; CHECK:       <stdin>:{{[0-9]+}}:21: error: integer addend expected
; CHECK-NEXT:    add    stack[r1 + r1], r1, r2
; CHECK-NEXT:                      ^
; CHECK:       <stdin>:{{[0-9]+}}:20: error: register name expected
; CHECK-NEXT:    add    stack[1 + 2], r1, r2
; CHECK-NEXT:                     ^
