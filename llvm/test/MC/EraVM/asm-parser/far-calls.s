; RUN: llvm-mc -triple eravm -filetype=asm %s -o - | FileCheck %s

  .text
foo:

; modifiers (condition)
  callf             r3, r4, @handler
  calld             r3, r4, @handler
  callm             r3, r4, @handler
  callf.lt          r3, r4, @handler
  calld.lt          r3, r4, @handler
  callm.lt          r3, r4, @handler

  callf.st          r3, r4, @handler
  calld.st          r3, r4, @handler
  callm.st          r3, r4, @handler
  callf.st.lt       r3, r4, @handler
  calld.st.lt       r3, r4, @handler
  callm.st.lt       r3, r4, @handler

  callf.sh          r3, r4, @handler
  calld.sh          r3, r4, @handler
  callm.sh          r3, r4, @handler
  callf.sh.lt       r3, r4, @handler
  calld.sh.lt       r3, r4, @handler
  callm.sh.lt       r3, r4, @handler

  callf.st.sh       r3, r4, @handler
  calld.st.sh       r3, r4, @handler
  callm.st.sh       r3, r4, @handler
  callf.st.sh.lt    r3, r4, @handler
  calld.st.sh.lt    r3, r4, @handler
  callm.st.sh.lt    r3, r4, @handler

; .st and .sh can be passed in any order (but predicate is the last modifier,
; as with any other instruction)
  callf.sh.st       r3, r4, @handler
  callf.sh.st.lt    r3, r4, @handler
  calld.sh.st       r3, r4, @handler
  calld.sh.st.lt    r3, r4, @handler
  callm.sh.st       r3, r4, @handler
  callm.sh.st.lt    r3, r4, @handler

; COM: Autogenerated checks below, see README.md.
; CHECK:  .text
; CHECK:foo:

; CHECK:  callf             r3, r4, @handler
; CHECK:  calld             r3, r4, @handler
; CHECK:  callm             r3, r4, @handler
; CHECK:  callf.lt          r3, r4, @handler
; CHECK:  calld.lt          r3, r4, @handler
; CHECK:  callm.lt          r3, r4, @handler

; CHECK:  callf.st          r3, r4, @handler
; CHECK:  calld.st          r3, r4, @handler
; CHECK:  callm.st          r3, r4, @handler
; CHECK:  callf.st.lt       r3, r4, @handler
; CHECK:  calld.st.lt       r3, r4, @handler
; CHECK:  callm.st.lt       r3, r4, @handler

; CHECK:  callf.sh          r3, r4, @handler
; CHECK:  calld.sh          r3, r4, @handler
; CHECK:  callm.sh          r3, r4, @handler
; CHECK:  callf.sh.lt       r3, r4, @handler
; CHECK:  calld.sh.lt       r3, r4, @handler
; CHECK:  callm.sh.lt       r3, r4, @handler

; CHECK:  callf.st.sh       r3, r4, @handler
; CHECK:  calld.st.sh       r3, r4, @handler
; CHECK:  callm.st.sh       r3, r4, @handler
; CHECK:  callf.st.sh.lt    r3, r4, @handler
; CHECK:  calld.st.sh.lt    r3, r4, @handler
; CHECK:  callm.st.sh.lt    r3, r4, @handler

; CHECK:  callf.st.sh       r3, r4, @handler
; CHECK:  callf.st.sh.lt    r3, r4, @handler
; CHECK:  calld.st.sh       r3, r4, @handler
; CHECK:  calld.st.sh.lt    r3, r4, @handler
; CHECK:  callm.st.sh       r3, r4, @handler
; CHECK:  callm.st.sh.lt    r3, r4, @handler
