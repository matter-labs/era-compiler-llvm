; RUN: llvm-mc -arch=eravm --show-encoding < %s | FileCheck %s

  .text
foo:

; mnemonic x modifiers -> opcodes
  sub       r1, r2, r3
  shl       r1, r2, r3
  shr       r1, r2, r3
  rol       r1, r2, r3
  ror       r1, r2, r3

  sub.s     r1, r2, r3
  shl.s     r1, r2, r3
  shr.s     r1, r2, r3
  rol.s     r1, r2, r3
  ror.s     r1, r2, r3

  sub!      r1, r2, r3
  shl!      r1, r2, r3
  shr!      r1, r2, r3
  rol!      r1, r2, r3
  ror!      r1, r2, r3

  sub.s!    r1, r2, r3
  shl.s!    r1, r2, r3
  shr.s!    r1, r2, r3
  rol.s!    r1, r2, r3
  ror.s!    r1, r2, r3

; combinations of operand types -> opcodes, field layout
  sub    r1,               r2, r3
  sub    42,               r2, r3
  sub    code[r1 + 42],    r2, r3
  sub    stack[r1 + 42],   r2, r3
  sub    stack-[r1 + 42],  r2, r3
  sub    stack-=[r1 + 42], r2, r3
  sub    r1,               r2, stack[r3 + 123]
  sub    42,               r2, stack[r3 + 123]
  sub    code[r1 + 42],    r2, stack[r3 + 123]
  sub    stack[r1 + 42],   r2, stack[r3 + 123]
  sub    stack-[r1 + 42],  r2, stack[r3 + 123]
  sub    stack-=[r1 + 42], r2, stack[r3 + 123]
  sub    r1,               r2, stack-[r3 + 123]
  sub    42,               r2, stack-[r3 + 123]
  sub    code[r1 + 42],    r2, stack-[r3 + 123]
  sub    stack[r1 + 42],   r2, stack-[r3 + 123]
  sub    stack-[r1 + 42],  r2, stack-[r3 + 123]
  sub    stack-=[r1 + 42], r2, stack-[r3 + 123]
  sub    r1,               r2, stack+=[r3 + 123]
  sub    42,               r2, stack+=[r3 + 123]
  sub    code[r1 + 42],    r2, stack+=[r3 + 123]
  sub    stack[r1 + 42],   r2, stack+=[r3 + 123]
  sub    stack-[r1 + 42],  r2, stack+=[r3 + 123]
  sub    stack-=[r1 + 42], r2, stack+=[r3 + 123]


; CHECK:  .text
; CHECK:foo:

; CHECK:  sub     r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x49]
; CHECK:  shl     r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x01,0xcf]
; CHECK:  shr     r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x2f]
; CHECK:  rol     r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x8f]
; CHECK:  ror     r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0xef]

; CHECK:  sub.s   r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x4a]
; CHECK:  shl.s   r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x01,0xd0]
; CHECK:  shr.s   r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x30]
; CHECK:  rol.s   r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x90]
; CHECK:  ror.s   r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0xf0]

; CHECK:  sub!    r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x4b]
; CHECK:  shl!    r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x01,0xd1]
; CHECK:  shr!    r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x31]
; CHECK:  rol!    r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x91]
; CHECK:  ror!    r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0xf1]

; CHECK:  sub.s!  r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x4c]
; CHECK:  shl.s!  r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x01,0xd2]
; CHECK:  shr.s!  r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x32]
; CHECK:  rol.s!  r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0x92]
; CHECK:  ror.s!  r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x02,0xf2]

; CHECK:  sub  r1, r2, r3                              ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x49]
; CHECK:  sub  42, r2, r3                              ; encoding: [0x00,0x00,0x00,0x2a,0x03,0x20,0x00,0x89]
; CHECK:  sub  code[r1+42], r2, r3                     ; encoding: [0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x99]
; CHECK:  sub  stack[42 + r1], r2, r3                  ; encoding: [0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x79]
; CHECK:  sub  stack-[42 + r1], r2, r3                 ; encoding: [0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x69]
; CHECK:  sub  stack-=[42 + r1], r2, r3                ; encoding: [0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x59]
; CHECK:  sub  r1, r2, stack[123 + r3]                 ; encoding: [0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x55]
; CHECK:  sub  42, r2, stack[123 + r3]                 ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x95]
; CHECK:  sub  code[r1+42], r2, stack[123 + r3]        ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0xa5]
; CHECK:  sub  stack[42 + r1], r2, stack[123 + r3]     ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x85]
; CHECK:  sub  stack-[42 + r1], r2, stack[123 + r3]    ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x75]
; CHECK:  sub  stack-=[42 + r1], r2, stack[123 + r3]   ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x65]
; CHECK:  sub  r1, r2, stack-[123 + r3]                ; encoding: [0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x51]
; CHECK:  sub  42, r2, stack-[123 + r3]                ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x91]
; CHECK:  sub  code[r1+42], r2, stack-[123 + r3]       ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0xa1]
; CHECK:  sub  stack[42 + r1], r2, stack-[123 + r3]    ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x81]
; CHECK:  sub  stack-[42 + r1], r2, stack-[123 + r3]   ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x71]
; CHECK:  sub  stack-=[42 + r1], r2, stack-[123 + r3]  ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x61]
; CHECK:  sub  r1, r2, stack+=[123 + r3]               ; encoding: [0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x4d]
; CHECK:  sub  42, r2, stack+=[123 + r3]               ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x8d]
; CHECK:  sub  code[r1+42], r2, stack+=[123 + r3]      ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x9d]
; CHECK:  sub  stack[42 + r1], r2, stack+=[123 + r3]   ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x7d]
; CHECK:  sub  stack-[42 + r1], r2, stack+=[123 + r3]  ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x6d]
; CHECK:  sub  stack-=[42 + r1], r2, stack+=[123 + r3] ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x5d]
