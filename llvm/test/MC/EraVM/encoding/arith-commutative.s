; RUN: llvm-mc -arch=eravm --show-encoding < %s | FileCheck %s

  .text
foo:

; mnemonic x {flag-preserving, flag-setting} -> opcodes
  add    r1, r2, r3
  and    r1, r2, r3
  or     r1, r2, r3
  xor    r1, r2, r3
  add!    r1, r2, r3
  and!    r1, r2, r3
  or!     r1, r2, r3
  xor!    r1, r2, r3

; combinations of operand types -> opcodes, field layout
  add    r1,               r2, r3
  add    42,               r2, r3
  add    code[r1 + 42],    r2, r3
  add    stack[r1 + 42],   r2, r3
  add    stack-[r1 + 42],  r2, r3
  add    stack-=[r1 + 42], r2, r3
  add    r1,               r2, stack[r3 + 123]
  add    42,               r2, stack[r3 + 123]
  add    code[r1 + 42],    r2, stack[r3 + 123]
  add    stack[r1 + 42],   r2, stack[r3 + 123]
  add    stack-[r1 + 42],  r2, stack[r3 + 123]
  add    stack-=[r1 + 42], r2, stack[r3 + 123]
  add    r1,               r2, stack-[r3 + 123]
  add    42,               r2, stack-[r3 + 123]
  add    code[r1 + 42],    r2, stack-[r3 + 123]
  add    stack[r1 + 42],   r2, stack-[r3 + 123]
  add    stack-[r1 + 42],  r2, stack-[r3 + 123]
  add    stack-=[r1 + 42], r2, stack-[r3 + 123]
  add    r1,               r2, stack+=[r3 + 123]
  add    42,               r2, stack+=[r3 + 123]
  add    code[r1 + 42],    r2, stack+=[r3 + 123]
  add    stack[r1 + 42],   r2, stack+=[r3 + 123]
  add    stack-[r1 + 42],  r2, stack+=[r3 + 123]
  add    stack-=[r1 + 42], r2, stack+=[r3 + 123]


; CHECK:  .text
; CHECK:foo:

; CHECK:  add  r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x19]
; CHECK:  and  r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x01,0x6f]
; CHECK:  or   r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x01,0x9f]
; CHECK:  xor  r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x01,0x3f]
; CHECK:  add! r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x1a]
; CHECK:  and! r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x01,0x70]
; CHECK:  or!  r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x01,0xa0]
; CHECK:  xor! r1, r2, r3                      ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x01,0x40]

; CHECK:  add  r1, r2, r3                              ; encoding: [0x00,0x00,0x00,0x00,0x03,0x21,0x00,0x19]
; CHECK:  add  42, r2, r3                              ; encoding: [0x00,0x00,0x00,0x2a,0x03,0x20,0x00,0x39]
; CHECK:  add  code[r1+42], r2, r3                     ; encoding: [0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x41]
; CHECK:  add  stack[42 + r1], r2, r3                  ; encoding: [0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x31]
; CHECK:  add  stack-[42 + r1], r2, r3                 ; encoding: [0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x29]
; CHECK:  add  stack-=[42 + r1], r2, r3                ; encoding: [0x00,0x00,0x00,0x2a,0x03,0x21,0x00,0x21]
; CHECK:  add  r1, r2, stack[123 + r3]                 ; encoding: [0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x1f]
; CHECK:  add  42, r2, stack[123 + r3]                 ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x3f]
; CHECK:  add  code[r1+42], r2, stack[123 + r3]        ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x47]
; CHECK:  add  stack[42 + r1], r2, stack[123 + r3]     ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x37]
; CHECK:  add  stack-[42 + r1], r2, stack[123 + r3]    ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x2f]
; CHECK:  add  stack-=[42 + r1], r2, stack[123 + r3]   ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x27]
; CHECK:  add  r1, r2, stack-[123 + r3]                ; encoding: [0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x1d]
; CHECK:  add  42, r2, stack-[123 + r3]                ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x3d]
; CHECK:  add  code[r1+42], r2, stack-[123 + r3]       ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x45]
; CHECK:  add  stack[42 + r1], r2, stack-[123 + r3]    ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x35]
; CHECK:  add  stack-[42 + r1], r2, stack-[123 + r3]   ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x2d]
; CHECK:  add  stack-=[42 + r1], r2, stack-[123 + r3]  ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x25]
; CHECK:  add  r1, r2, stack+=[123 + r3]               ; encoding: [0x00,0x7b,0x00,0x00,0x03,0x21,0x00,0x1b]
; CHECK:  add  42, r2, stack+=[123 + r3]               ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x20,0x00,0x3b]
; CHECK:  add  code[r1+42], r2, stack+=[123 + r3]      ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x43]
; CHECK:  add  stack[42 + r1], r2, stack+=[123 + r3]   ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x33]
; CHECK:  add  stack-[42 + r1], r2, stack+=[123 + r3]  ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x2b]
; CHECK:  add  stack-=[42 + r1], r2, stack+=[123 + r3] ; encoding: [0x00,0x7b,0x00,0x2a,0x03,0x21,0x00,0x23]
