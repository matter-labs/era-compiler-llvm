; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -aa-pipeline=basic-aa,evm-aa -passes=dse -S < %s | FileCheck %s
target datalayout = "E-p:256:256-i256:256:256-S256-a:256:256"
target triple = "evm-unknown-unknown"

declare i256 @llvm.evm.calldatasize()
declare void @llvm.evm.return.sptr(ptr addrspace(1) readonly, i256, ptr addrspace(5), ptr addrspace(6))
declare void @llvm.evm.revert.sptr(ptr addrspace(1) readonly, i256, ptr addrspace(5), ptr addrspace(6))
declare void @llvm.memcpy.p1.p3.i256(ptr addrspace(1) noalias nocapture writeonly, ptr addrspace(3) noalias nocapture readonly, i256, i1 immarg)

; This test verifies that unused heap stores can be safely eliminated before revert or return intrinsics.
define void @test(ptr addrspace(3) %src) noreturn {
; CHECK-LABEL: define void @test(
; CHECK-SAME: ptr addrspace(3) [[SRC:%.*]]) #[[ATTR3:[0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    [[CALLDATASIZE:%.*]] = tail call i256 @llvm.evm.calldatasize()
; CHECK-NEXT:    br label %[[IF_JOIN22:.*]]
; CHECK:       [[IF_JOIN22]]:
; CHECK-NEXT:    store i256 1, ptr addrspace(5) null, align 32
; CHECK-NEXT:    [[COMPARISON_RESULT_I:%.*]] = icmp ugt i256 [[CALLDATASIZE]], 4
; CHECK-NEXT:    br i1 [[COMPARISON_RESULT_I]], label %[[FUN_EXIT:.*]], label %[[IF_JOIN:.*]]
; CHECK:       [[IF_JOIN]]:
; CHECK-NEXT:    store i256 7, ptr addrspace(6) null, align 32
; CHECK-NEXT:    tail call void @llvm.evm.return.sptr(ptr addrspace(1) noalias nocapture nofree noundef nonnull align 32 null, i256 32, ptr addrspace(5) null, ptr addrspace(6) null)
; CHECK-NEXT:    unreachable
; CHECK:       [[FUN_EXIT]]:
; CHECK-NEXT:    store i256 2, ptr addrspace(5) null, align 32
; CHECK-NEXT:    tail call void @llvm.evm.revert.sptr(ptr addrspace(1) noalias nocapture nofree noundef nonnull align 32 null, i256 0, ptr addrspace(5) null, ptr addrspace(6) null)
; CHECK-NEXT:    unreachable
;
entry:
  ; To be removed
  store i256 128, ptr addrspace(1) inttoptr (i256 64 to ptr addrspace(1)), align 32
  %calldatasize = tail call i256 @llvm.evm.calldatasize()
  br label %if_join22

if_join22:
  store i256 1, ptr addrspace(5) null, align 32
  %comparison_result.i = icmp ugt i256 %calldatasize, 4
  br i1 %comparison_result.i, label %fun_exit, label %if_join

if_join:
  store i256 7, ptr addrspace(6) null, align 32
  ; To be removed
  call void @llvm.memcpy.p1.p3.i256(ptr addrspace(1) inttoptr (i256 128 to ptr addrspace(1)), ptr addrspace(3) %src, i256 32, i1 false)
  tail call void @llvm.evm.return.sptr(ptr addrspace(1) noalias nocapture nofree noundef nonnull align 32 null, i256 32, ptr addrspace(5) null, ptr addrspace(6) null)
  unreachable

fun_exit:
  ; To be removed
  store i256 10, ptr addrspace(1) null, align 32
  store i256 2, ptr addrspace(5) null, align 32
  tail call void @llvm.evm.revert.sptr(ptr addrspace(1) noalias nocapture nofree noundef nonnull align 32 null, i256 0, ptr addrspace(5) null, ptr addrspace(6) null)
  unreachable
}
