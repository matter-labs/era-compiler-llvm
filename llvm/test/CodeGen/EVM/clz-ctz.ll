; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: llc < %s | FileCheck --check-prefix=GENERIC %s
; RUN: llc -mattr=+fusaka < %s | FileCheck --check-prefix=FUSAKA %s

target datalayout = "E-p:256:256-i256:256:256-S256-a:256:256"
target triple = "evm"

declare i256 @llvm.ctlz.i256(i256, i1)
declare i256 @llvm.cttz.i256(i256, i1)

define i256 @clz(i256 %v) {
; GENERIC-LABEL: clz:
; GENERIC:       ; %bb.0:
; GENERIC-NEXT:    JUMPDEST
; GENERIC-NEXT:    PUSH32 0x101010101010101010101010101010101010101010101010101010101010101
; GENERIC-NEXT:    PUSH16 0xF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F
; GENERIC-NEXT:    DUP2
; GENERIC-NEXT:    DUP2
; GENERIC-NEXT:    PUSH32 0x3333333333333333333333333333333333333333333333333333333333333333
; GENERIC-NEXT:    DUP6
; GENERIC-NEXT:    PUSH16 0x55555555555555555555555555555555
; GENERIC-NEXT:    SWAP7
; GENERIC-NEXT:    PUSH1 0x1
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    OR
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    PUSH1 0x2
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    OR
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    PUSH1 0x4
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    OR
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    PUSH1 0x8
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    OR
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    PUSH1 0x10
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    OR
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    PUSH1 0x20
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    OR
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    PUSH1 0x40
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    OR
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    PUSH1 0x80
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    OR
; GENERIC-NEXT:    NOT
; GENERIC-NEXT:    PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
; GENERIC-NEXT:    DUP8
; GENERIC-NEXT:    DUP3
; GENERIC-NEXT:    PUSH1 0x81
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    DUP3
; GENERIC-NEXT:    PUSH1 0x80
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    SUB
; GENERIC-NEXT:    DUP4
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    DUP3
; GENERIC-NEXT:    PUSH1 0x2
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    SWAP2
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    ADD
; GENERIC-NEXT:    SWAP8
; GENERIC-NEXT:    DUP3
; GENERIC-NEXT:    PUSH1 0x1
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    SWAP2
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    SUB
; GENERIC-NEXT:    SWAP1
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    DUP3
; GENERIC-NEXT:    PUSH1 0x2
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    SWAP2
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    ADD
; GENERIC-NEXT:    SWAP5
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    PUSH1 0x4
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    ADD
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    MUL
; GENERIC-NEXT:    PUSH1 0x10
; GENERIC-NEXT:    BYTE
; GENERIC-NEXT:    SWAP3
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    PUSH1 0x4
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    ADD
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    MUL
; GENERIC-NEXT:    PUSH1 0x10
; GENERIC-NEXT:    BYTE
; GENERIC-NEXT:    ADD
; GENERIC-NEXT:    SWAP1
; GENERIC-NEXT:    JUMP
;
; FUSAKA-LABEL: clz:
; FUSAKA:       ; %bb.0:
; FUSAKA-NEXT:    JUMPDEST
; FUSAKA-NEXT:    CLZ
; FUSAKA-NEXT:    SWAP1
; FUSAKA-NEXT:    JUMP
  %res = call i256 @llvm.ctlz.i256(i256 %v, i1 false)
  ret i256 %res
}

define i256 @ctz(i256 %v) {
; GENERIC-LABEL: ctz:
; GENERIC:       ; %bb.0:
; GENERIC-NEXT:    JUMPDEST
; GENERIC-NEXT:    PUSH32 0x101010101010101010101010101010101010101010101010101010101010101
; GENERIC-NEXT:    PUSH16 0xF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F
; GENERIC-NEXT:    DUP2
; GENERIC-NEXT:    DUP2
; GENERIC-NEXT:    PUSH32 0x3333333333333333333333333333333333333333333333333333333333333333
; GENERIC-NEXT:    DUP6
; GENERIC-NEXT:    PUSH1 0x1
; GENERIC-NEXT:    PUSH16 0x55555555555555555555555555555555
; GENERIC-NEXT:    SWAP8
; GENERIC-NEXT:    SUB
; GENERIC-NEXT:    SWAP1
; GENERIC-NEXT:    NOT
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
; GENERIC-NEXT:    DUP8
; GENERIC-NEXT:    DUP3
; GENERIC-NEXT:    PUSH1 0x81
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    DUP3
; GENERIC-NEXT:    PUSH1 0x80
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    SUB
; GENERIC-NEXT:    DUP4
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    DUP3
; GENERIC-NEXT:    PUSH1 0x2
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    SWAP2
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    ADD
; GENERIC-NEXT:    SWAP8
; GENERIC-NEXT:    DUP3
; GENERIC-NEXT:    PUSH1 0x1
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    SWAP2
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    SUB
; GENERIC-NEXT:    SWAP1
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    DUP3
; GENERIC-NEXT:    PUSH1 0x2
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    SWAP2
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    ADD
; GENERIC-NEXT:    SWAP5
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    PUSH1 0x4
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    ADD
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    MUL
; GENERIC-NEXT:    PUSH1 0x10
; GENERIC-NEXT:    BYTE
; GENERIC-NEXT:    SWAP3
; GENERIC-NEXT:    DUP1
; GENERIC-NEXT:    PUSH1 0x4
; GENERIC-NEXT:    SHR
; GENERIC-NEXT:    ADD
; GENERIC-NEXT:    AND
; GENERIC-NEXT:    MUL
; GENERIC-NEXT:    PUSH1 0x10
; GENERIC-NEXT:    BYTE
; GENERIC-NEXT:    ADD
; GENERIC-NEXT:    SWAP1
; GENERIC-NEXT:    JUMP
;
; FUSAKA-LABEL: ctz:
; FUSAKA:       ; %bb.0:
; FUSAKA-NEXT:    JUMPDEST
; FUSAKA-NEXT:    PUSH1 0x1
; FUSAKA-NEXT:    DUP2
; FUSAKA-NEXT:    SUB
; FUSAKA-NEXT:    SWAP1
; FUSAKA-NEXT:    NOT
; FUSAKA-NEXT:    AND
; FUSAKA-NEXT:    CLZ
; FUSAKA-NEXT:    PUSH2 0x100
; FUSAKA-NEXT:    SUB
; FUSAKA-NEXT:    SWAP1
; FUSAKA-NEXT:    JUMP
  %res = call i256 @llvm.cttz.i256(i256 %v, i1 false)
  ret i256 %res
}
