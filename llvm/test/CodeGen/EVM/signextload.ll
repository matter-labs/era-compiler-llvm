; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: llc < %s | FileCheck %s

target datalayout = "E-p:256:256-i256:256:256-S256-a:256:256"
target triple = "evm"

define i256 @load_signexti8(ptr addrspace(1) %ptr) nounwind {
; CHECK-LABEL: load_signexti8:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    MLOAD
; CHECK-NEXT:    PUSH1 248
; CHECK-NEXT:    SAR
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP

  %load = load i8, ptr addrspace(1) %ptr
  %sext = sext i8 %load to i256
  ret i256 %sext
}

define i256 @load_signexti16(ptr addrspace(1) %ptr) nounwind {
; CHECK-LABEL: load_signexti16:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    MLOAD
; CHECK-NEXT:    PUSH1 240
; CHECK-NEXT:    SAR
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP

  %load = load i16, ptr addrspace(1) %ptr
  %sext = sext i16 %load to i256
  ret i256 %sext
}

define i256 @load_signexti32(ptr addrspace(1) %ptr) nounwind {
; CHECK-LABEL: load_signexti32:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    MLOAD
; CHECK-NEXT:    PUSH1 224
; CHECK-NEXT:    SAR
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP

  %load = load i32, ptr addrspace(1) %ptr
  %sext = sext i32 %load to i256
  ret i256 %sext
}

define i256 @load_signexti64(ptr addrspace(1) %ptr) nounwind {
; CHECK-LABEL: load_signexti64:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    MLOAD
; CHECK-NEXT:    PUSH1 192
; CHECK-NEXT:    SAR
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP

  %load = load i64, ptr addrspace(1) %ptr
  %sext = sext i64 %load to i256
  ret i256 %sext
}

define i256 @load_signexti128(ptr addrspace(1) %ptr) nounwind {
; CHECK-LABEL: load_signexti128:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    MLOAD
; CHECK-NEXT:    PUSH1 128
; CHECK-NEXT:    SAR
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP

  %load = load i128, ptr addrspace(1) %ptr
  %sext = sext i128 %load to i256
  ret i256 %sext
}
