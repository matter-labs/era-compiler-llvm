; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -passes=early-cse -S < %s | FileCheck %s

target datalayout = "E-p:256:256-i256:256:256-S256-a:256:256"
target triple = "evm"

declare i256 @llvm.evm.exp(i256, i256)

define i256 @test_exponent1() {
; CHECK-LABEL: define i256 @test_exponent1() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 0, i256 10)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 0, i256 10)
  ret i256 %res
}

define i256 @test_exponent2() {
; CHECK-LABEL: define i256 @test_exponent2() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 2, i256 undef)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 2, i256 undef)
  ret i256 %res
}

define i256 @test_exponent3() {
; CHECK-LABEL: define i256 @test_exponent3() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 2, i256 255)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 2, i256 255)
  ret i256 %res
}

define i256 @test_exponent4() {
; CHECK-LABEL: define i256 @test_exponent4() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 307, i256 32)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 307, i256 32)
  ret i256 %res
}

define i256 @test_exponent5() {
; CHECK-LABEL: define i256 @test_exponent5() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 undef, i256 2)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 undef, i256 2)
  ret i256 %res
}

define i256 @test_exponent6() {
; CHECK-LABEL: define i256 @test_exponent6() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 0, i256 0)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 0, i256 0)
  ret i256 %res
}

define i256 @test_exponent7() {
; CHECK-LABEL: define i256 @test_exponent7() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 1, i256 0)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 1, i256 0)
  ret i256 %res
}

define i256 @test_exponent7.1() {
; CHECK-LABEL: define i256 @test_exponent7.1() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 1, i256 1)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 1, i256 1)
  ret i256 %res
}

define i256 @test_exponent8() {
; CHECK-LABEL: define i256 @test_exponent8() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 0, i256 433478394034343)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 0, i256 433478394034343)
  ret i256 %res
}

define i256 @test_exponent9() {
; CHECK-LABEL: define i256 @test_exponent9() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 121563127839120, i256 0)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 121563127839120, i256 0)
  ret i256 %res
}

define i256 @test_exponent10() {
; CHECK-LABEL: define i256 @test_exponent10() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 1, i256 433478394034343)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 1, i256 433478394034343)
  ret i256 %res
}

define i256 @test_exponent11() {
; CHECK-LABEL: define i256 @test_exponent11() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 121563127839120, i256 1)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 121563127839120, i256 1)
  ret i256 %res
}

define i256 @test_exponent12() {
; CHECK-LABEL: define i256 @test_exponent12() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 21, i256 52)
; CHECK-NEXT:    ret i256 [[RES]]
;

  %res = call i256 @llvm.evm.exp(i256 21, i256 52)
  ret i256 %res
}

define i256 @test_exponent13() {
; CHECK-LABEL: define i256 @test_exponent13() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 340282366920938463463374607431768211455, i256 2)
; CHECK-NEXT:    ret i256 [[RES]]
;

  ; 0x00000000000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ^ 2 ->
  ; 0xfffffffffffffffffffffffffffffffe00000000000000000000000000000001
  %res = call i256 @llvm.evm.exp(i256 340282366920938463463374607431768211455, i256 2)
  ret i256 %res
}

define i256 @test_exponent14() {
; CHECK-LABEL: define i256 @test_exponent14() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 65536, i256 16)
; CHECK-NEXT:    ret i256 [[RES]]
;

  ; 0x0000000000000000000000000000000000000000000000000000000000010000 ^ 16 ->  0
  %res = call i256 @llvm.evm.exp(i256 65536, i256 16)
  ret i256 %res
}

define i256 @test_exponent15() {
; CHECK-LABEL: define i256 @test_exponent15() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 21709470740815105492860156599188632070735699051917406219058709325770546741247, i256 -7627257922765187922181218227643122808087153271902696082090171450652228583425)
; CHECK-NEXT:    ret i256 [[RES]]
;

  ; 0x2fff1ffffffffff5ffffff0fffffffff2ffffffafffafffcffff1ff234ffffff ^
  ; 0xef231ffffffffff4f12fff34ffffffff2fffffbbfffafffdffff22f538ffffff ->
  ; 46756260758475007021788099943083655901358133181480408838873172916982662561791
  %res = call i256 @llvm.evm.exp(i256 21709470740815105492860156599188632070735699051917406219058709325770546741247, i256 108164831314551007501389766781044785045182831393737867957367412557260901056511)
  ret i256 %res
}

define i256 @test_exponent16() {
; CHECK-LABEL: define i256 @test_exponent16() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 0, i256 -1)
; CHECK-NEXT:    ret i256 [[RES]]
;

  ; 0 ^ 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff -> 0
  %res = call i256 @llvm.evm.exp(i256 0, i256 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  ret i256 %res
}

define i256 @test_exponent17() {
; CHECK-LABEL: define i256 @test_exponent17() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 -1, i256 0)
; CHECK-NEXT:    ret i256 [[RES]]
;

  ; 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ^ 0 - > 1
  %res = call i256 @llvm.evm.exp(i256 115792089237316195423570985008687907853269984665640564039457584007913129639935, i256 0)
  ret i256 %res
}

define i256 @test_exponent18() {
; CHECK-LABEL: define i256 @test_exponent18() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 1, i256 -1)
; CHECK-NEXT:    ret i256 [[RES]]
;

  ; 1 ^ 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff -> 1
  %res = call i256 @llvm.evm.exp(i256 1, i256 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  ret i256 %res
}

define i256 @test_exponent19() {
; CHECK-LABEL: define i256 @test_exponent19() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 -1, i256 1)
; CHECK-NEXT:    ret i256 [[RES]]
;

  ; 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ^ 1 - >
  ; 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
  %res = call i256 @llvm.evm.exp(i256 115792089237316195423570985008687907853269984665640564039457584007913129639935, i256 1)
  ret i256 %res
}

define i256 @test_exponent20() {
; CHECK-LABEL: define i256 @test_exponent20() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 7437834752357434334343423343443375834785783474, i256 -1)
; CHECK-NEXT:    ret i256 [[RES]]
;

  ; 7437834752357434334343423343443375834785783474 ^
  ; 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff - > 0
  %res = call i256 @llvm.evm.exp(i256 7437834752357434334343423343443375834785783474, i256 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  ret i256 %res
}

define i256 @test_exponent21() {
; CHECK-LABEL: define i256 @test_exponent21() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 -1, i256 23784273472384723848213821342323233223)
; CHECK-NEXT:    ret i256 [[RES]]
;

  ; 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ^
  ; 23784273472384723848213821342323233223 - >
  ; 115792089237316195423570985008687907853269984665640564039457584007913129639935
  %res = call i256 @llvm.evm.exp(i256 115792089237316195423570985008687907853269984665640564039457584007913129639935, i256 23784273472384723848213821342323233223)
  ret i256 %res
}

define i256 @test_exponent22() {
; CHECK-LABEL: define i256 @test_exponent22() {
; CHECK-NEXT:    [[RES:%.*]] = call i256 @llvm.evm.exp(i256 -1, i256 -1)
; CHECK-NEXT:    ret i256 [[RES]]
;

  ; 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ^
  ; 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ->
  ; 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
  %res = call i256 @llvm.evm.exp(i256 115792089237316195423570985008687907853269984665640564039457584007913129639935, i256 115792089237316195423570985008687907853269984665640564039457584007913129639935)
  ret i256 %res
}
