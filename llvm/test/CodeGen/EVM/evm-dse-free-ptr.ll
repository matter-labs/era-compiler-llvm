; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -aa-pipeline=default -passes=dse -S < %s | FileCheck %s
target datalayout = "E-p:256:256-i256:256:256-S256-a:256:256"
target triple = "evm-unknown-unknown"

declare i256 @llvm.evm.callvalue()
declare i256 @llvm.evm.calldatasize()
declare void @llvm.evm.return(ptr addrspace(1) readonly, i256)
declare void @llvm.evm.revert(ptr addrspace(1) readonly, i256)

; Check that DSE eliminates the initialization of unused free memory pointer:
; store i256 128, ptr addrspace(1) inttoptr (i256 64 to ptr addrspace(1)), align 64

define void @remove_free_ptr() noreturn {
; CHECK-LABEL: define void @remove_free_ptr(
; CHECK-SAME: ) #[[ATTR2:[0-9]+]] {
; CHECK-NEXT:  [[TRY:.*:]]
; CHECK-NEXT:    [[CALLVALUE_I:%.*]] = tail call i256 @llvm.evm.callvalue()
; CHECK-NEXT:    [[COMPARISON_RESULT_I:%.*]] = icmp eq i256 [[CALLVALUE_I]], 0
; CHECK-NEXT:    br i1 [[COMPARISON_RESULT_I]], label %"block_rt_1/0.i", label %"block_rt_2/0.i"
; CHECK:       "block_rt_1/0.i":
; CHECK-NEXT:    [[CALLDATASIZE_I:%.*]] = tail call i256 @llvm.evm.calldatasize()
; CHECK-NEXT:    [[COMPARISON_RESULT7_I:%.*]] = icmp ult i256 [[CALLDATASIZE_I]], 4
; CHECK-NEXT:    br i1 [[COMPARISON_RESULT7_I]], label %"block_rt_2/0.i", label %[[SHIFT_RIGHT_NON_OVERFLOW_I:.*]]
; CHECK:       "block_rt_2/0.i":
; CHECK-NEXT:    tail call void @llvm.evm.revert(ptr addrspace(1) noalias nocapture nofree noundef nonnull align 32 null, i256 0)
; CHECK-NEXT:    unreachable
; CHECK:       "block_rt_3/0.i":
; CHECK-NEXT:    store i256 42, ptr addrspace(1) inttoptr (i256 128 to ptr addrspace(1)), align 128
; CHECK-NEXT:    tail call void @llvm.evm.return(ptr addrspace(1) noalias nocapture nofree noundef nonnull align 32 inttoptr (i256 128 to ptr addrspace(1)), i256 32)
; CHECK-NEXT:    unreachable
; CHECK:       "block_rt_4/0.i":
; CHECK-NEXT:    store i256 99, ptr addrspace(1) inttoptr (i256 128 to ptr addrspace(1)), align 128
; CHECK-NEXT:    tail call void @llvm.evm.return(ptr addrspace(1) noalias nocapture nofree noundef nonnull align 32 inttoptr (i256 128 to ptr addrspace(1)), i256 32)
; CHECK-NEXT:    unreachable
; CHECK:       [[SHIFT_RIGHT_NON_OVERFLOW_I]]:
; CHECK-NEXT:    [[CALLDATA_LOAD_RESULT_I:%.*]] = load i256, ptr addrspace(2) null, align 4294967296
; CHECK-NEXT:    [[SHIFT_RIGHT_NON_OVERFLOW_RESULT_I:%.*]] = lshr i256 [[CALLDATA_LOAD_RESULT_I]], 224
; CHECK-NEXT:    [[TRUNC:%.*]] = trunc nuw i256 [[SHIFT_RIGHT_NON_OVERFLOW_RESULT_I]] to i32
; CHECK-NEXT:    switch i32 [[TRUNC]], label %"block_rt_2/0.i" [
; CHECK-NEXT:      i32 1039457780, label %"block_rt_3/0.i"
; CHECK-NEXT:      i32 1519042605, label %"block_rt_4/0.i"
; CHECK-NEXT:    ]
;
try:
  store i256 128, ptr addrspace(1) inttoptr (i256 64 to ptr addrspace(1)), align 64
  %callvalue.i = tail call i256 @llvm.evm.callvalue()
  %comparison_result.i = icmp eq i256 %callvalue.i, 0
  br i1 %comparison_result.i, label %"block_rt_1/0.i", label %"block_rt_2/0.i"

"block_rt_1/0.i":
  %calldatasize.i = tail call i256 @llvm.evm.calldatasize()
  %comparison_result7.i = icmp ult i256 %calldatasize.i, 4
  br i1 %comparison_result7.i, label %"block_rt_2/0.i", label %shift_right_non_overflow.i

"block_rt_2/0.i":
  tail call void @llvm.evm.revert(ptr addrspace(1) noalias nocapture nofree noundef nonnull align 32 null, i256 0)
  unreachable

"block_rt_3/0.i":
  store i256 42, ptr addrspace(1) inttoptr (i256 128 to ptr addrspace(1)), align 128
  tail call void @llvm.evm.return(ptr addrspace(1) noalias nocapture nofree noundef nonnull align 32 inttoptr (i256 128 to ptr addrspace(1)), i256 32)
  unreachable

"block_rt_4/0.i":
  store i256 99, ptr addrspace(1) inttoptr (i256 128 to ptr addrspace(1)), align 128
  tail call void @llvm.evm.return(ptr addrspace(1) noalias nocapture nofree noundef nonnull align 32 inttoptr (i256 128 to ptr addrspace(1)), i256 32)
  unreachable

shift_right_non_overflow.i:
  %calldata_load_result.i = load i256, ptr addrspace(2) null, align 4294967296
  %shift_right_non_overflow_result.i = lshr i256 %calldata_load_result.i, 224
  %trunc = trunc nuw i256 %shift_right_non_overflow_result.i to i32
  switch i32 %trunc, label %"block_rt_2/0.i" [
  i32 1039457780, label %"block_rt_3/0.i"
  i32 1519042605, label %"block_rt_4/0.i"
  ]
}
