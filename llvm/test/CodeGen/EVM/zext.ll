; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: llc < %s | FileCheck %s

target datalayout = "E-p:256:256-i256:256:256-S256-a:256:256"
target triple = "evm"

define i256 @zexti8(i8 %rs1) nounwind {
; CHECK-LABEL: zexti8:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    PUSH1 0xFF
; CHECK-NEXT:    AND
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP

  %res = zext i8 %rs1 to i256
  ret i256 %res
}

define i256 @zexti16(i16 %rs1) nounwind {
; CHECK-LABEL: zexti16:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    PUSH2 0xFFFF
; CHECK-NEXT:    AND
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP

  %res = zext i16 %rs1 to i256
  ret i256 %res
}

define i256 @zexti32(i32 %rs1) nounwind {
; CHECK-LABEL: zexti32:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    PUSH4 0xFFFFFFFF
; CHECK-NEXT:    AND
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP

  %res = zext i32 %rs1 to i256
  ret i256 %res
}

define i256 @zexti64(i64 %rs1) nounwind {
; CHECK-LABEL: zexti64:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    PUSH8 0xFFFFFFFFFFFFFFFF
; CHECK-NEXT:    AND
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP

  %res = zext i64 %rs1 to i256
  ret i256 %res
}

define i256 @zexti128(i128 %rs1) nounwind {
; CHECK-LABEL: zexti128:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
; CHECK-NEXT:    AND
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP

  %res = zext i128 %rs1 to i256
  ret i256 %res
}
