; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: llc < %s | FileCheck %s

target datalayout = "E-p:256:256-i256:256:256-S256-a:256:256"
target triple = "evm"

define i256 @foo(i256) noinline {
; CHECK-LABEL: foo:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    POP
; CHECK-NEXT:    PUSH0
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP
  ret i256 0
}

define void @foo2(i256) noinline {
; CHECK-LABEL: foo2:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    POP
; CHECK-NEXT:    JUMP
  ret void
}

define i256 @call(i256 %a, i256 %b) nounwind {
; CHECK-LABEL: call:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    PUSH4 @.FUNC_RET0
; CHECK-NEXT:    SWAP2
; CHECK-NEXT:    ADD
; CHECK-NEXT:    PUSH4 @foo
; CHECK-NEXT:    JUMP
; CHECK-NEXT:  .FUNC_RET0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    SWAP1
; CHECK-NEXT:    JUMP

  %sum = add i256 %a, %b
  %res = call i256 @foo(i256 %sum)
  ret i256 %res
}

define void @call2(i256 %a, i256 %b) nounwind {
; CHECK-LABEL: call2:
; CHECK:       ; %bb.0:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    PUSH4 @.FUNC_RET1
; CHECK-NEXT:    SWAP2
; CHECK-NEXT:    ADD
; CHECK-NEXT:    PUSH4 @foo2
; CHECK-NEXT:    JUMP
; CHECK-NEXT:  .FUNC_RET1:
; CHECK-NEXT:    JUMPDEST
; CHECK-NEXT:    JUMP

  %sum = add i256 %a, %b
  call void @foo2(i256 %sum)
  ret void
}
