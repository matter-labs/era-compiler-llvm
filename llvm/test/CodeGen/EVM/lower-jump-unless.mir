# RUN: llc -x mir --run-pass=evm-lower-jump-unless < %s | FileCheck %s
# RUN: llc -x mir --run-pass=evm-lower-jump-unless -O0  < %s | FileCheck %s --check-prefix=CHECK-O0

--- |
  target datalayout = "E-p:256:256-i256:256:256-S256-a:256:256"
  target triple = "evm"

  define void @br_eq(i256 %a, i256 %b) {
    %cond = icmp eq i256 %a, %b
    br i1 %cond, label %true, label %false

  true:                                             ; preds = %0
    unreachable

  false:                                            ; preds = %0
    unreachable
  }

  define void @br_ugt(i256 %a, i256 %b) {
    %cond = icmp ugt i256 %a, %b
    br i1 %cond, label %true, label %false

  true:                                             ; preds = %0
    unreachable

  false:                                            ; preds = %0
    unreachable
  }

...
---
name:            br_eq
alignment:       1
machineFunctionInfo:
  isStackified:    true
  numberOfParameters: 2
  hasPushDeployAddress: false
body:             |
  ; CHECK-LABEL: name: br_eq
  ; CHECK:        SWAP2_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   SUB_S
  ; CHECK-NEXT:   PseudoJUMPI %bb.2
  ;
  ; CHECK-O0-LABEL: name: br_eq
  ; CHECK-O0:        SWAP2_S
  ; CHECK-O0-NEXT:   POP_S
  ; CHECK-O0-NEXT:   EQ_S
  ; CHECK-O0-NEXT:   ISZERO_S
  ; CHECK-O0-NEXT:   PseudoJUMPI %bb.2
  bb.0 (%ir-block.0):
    successors: %bb.1(0x40000000), %bb.2(0x40000000)
    liveins: $arguments, $value_stack

    SWAP2_S
    POP_S
    EQ_S
    PseudoJUMP_UNLESS %bb.2

  bb.1.true:
    successors:
    liveins: $value_stack

  bb.2.false:
    liveins: $value_stack

...
---
name:            br_ugt
alignment:       1
machineFunctionInfo:
  isStackified:    true
  numberOfParameters: 2
  hasPushDeployAddress: false
body:             |
  ; CHECK-LABEL: name: br_ugt
  ; CHECK:        SWAP1_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   UGT_S
  ; CHECK-NEXT:   ISZERO_S
  ; CHECK-NEXT:   PseudoJUMPI %bb.2
  ;
  ; CHECK-O0-LABEL: name: br_ugt
  ; CHECK-O0:        SWAP1_S
  ; CHECK-O0-NEXT:   SWAP2_S
  ; CHECK-O0-NEXT:   POP_S
  ; CHECK-O0-NEXT:   UGT_S
  ; CHECK-O0-NEXT:   ISZERO_S
  ; CHECK-O0-NEXT:   PseudoJUMPI %bb.2
  bb.0 (%ir-block.0):
    successors: %bb.1(0x40000000), %bb.2(0x40000000)
    liveins: $arguments, $value_stack

    SWAP1_S
    SWAP2_S
    POP_S
    UGT_S
    PseudoJUMP_UNLESS %bb.2

  bb.1.true:
    successors:
    liveins: $value_stack

  bb.2.false:
    liveins: $value_stack

...
