# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc -x mir -run-pass=evm-backward-propagation-stackification < %s | FileCheck %s

--- |
  source_filename = "test.ll"
  target datalayout = "E-p:256:256-i256:256:256-S256-a:256:256"
  target triple = "evm"

  define i256 @foo(i256 %arg1, i256 %arg2) #0 {
    %srem = srem i256 1000000000000000000000000000000000000000000000000000000000000000000000000001, %arg1
    %sdiv = sdiv i256 1000000000000000000000000000000000000000000000000000000000000000000000000001, %arg2
    %add = add nsw i256 %sdiv, %srem
    ret i256 %add
  }

  attributes #0 = { minsize }

...
---
name:            foo
alignment:       1
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: gpr, preferred-register: '' }
  - { id: 1, class: gpr, preferred-register: '' }
  - { id: 2, class: gpr, preferred-register: '' }
  - { id: 3, class: gpr, preferred-register: '' }
  - { id: 4, class: gpr, preferred-register: '' }
  - { id: 5, class: gpr, preferred-register: '' }
  - { id: 6, class: gpr, preferred-register: '' }
liveins:
  - { reg: '$arguments', virtual-reg: '' }
  - { reg: '$value_stack', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 0
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  isCalleeSavedInfoValid: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo:
  isStackified:    false
  numberOfParameters: 2
  hasPushDeployAddress: false
body:             |
  bb.0 (%ir-block.0):
    liveins: $arguments, $value_stack

    ; CHECK-LABEL: name: foo
    ; CHECK: liveins: $arguments, $value_stack
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: PUSH32_S i256 1000000000000000000000000000000000000000000000000000000000000000000000000001
    ; CHECK-NEXT: SMOD_S
    ; CHECK-NEXT: SWAP1_S
    ; CHECK-NEXT: PUSH32_S i256 1000000000000000000000000000000000000000000000000000000000000000000000000001
    ; CHECK-NEXT: SDIV_S
    ; CHECK-NEXT: ADD_S
    ; CHECK-NEXT: SWAP1_S
    ; CHECK-NEXT: PseudoRET
    %0:gpr = ARGUMENT 0, implicit $arguments
    %3:gpr = ARGUMENT 1, implicit $arguments
    %1:gpr = CONST_I256 i256 1000000000000000000000000000000000000000000000000000000000000000000000000001, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %2:gpr = SMOD %1, %0, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %6:gpr = CONST_I256 i256 1000000000000000000000000000000000000000000000000000000000000000000000000001, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %4:gpr = SDIV %6, %3, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %5:gpr = nsw ADD %4, %2, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    RET %5, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack

...
