# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc -x mir -run-pass=evm-backward-propagation-stackification -run-pass=evm-finalize-stack-frames -evm-stack-region-offset=128 -evm-stack-region-size=128 < %s | FileCheck %s

--- |
  source_filename = "reduced.ll"
  target datalayout = "E-p:256:256-i256:256:256-S256-a:256:256"
  target triple = "evm-unknown-unknown"

  define fastcc void @main(i255 %trunc22495, i1 %comparison_result7009.not, i8 %trunc, i8 %trunc8) {
  entry:
    br label %conditional_rt_20_join_block

  "block_rt_46/7":                                  ; preds = %conditional_rt_52_join_block3336, %conditional_rt_45_join_block2670
    %addition_result2803 = or i256 %stack_var_009.022000, 1
    %and_result2660 = and i256 %stack_var_009.022000, 0
    br label %conditional_rt_45_join_block2670

  "block_rt_59/7.lr.ph.split":                      ; preds = %conditional_rt_52_join_block3336
    %0 = zext i255 %trunc22495 to i256
    switch i256 %0, label %remainder_join12885.preheader [
      i256 4, label %conditional_rt_52_join_block3336
      i256 6, label %"block_rt_64/7.us21835"
      i256 0, label %"block_rt_123/7"
    ]

  remainder_join12885.preheader:                    ; preds = %"block_rt_59/7.lr.ph.split"
    br label %remainder_join12885

  "block_rt_64/7.us21835":                          ; preds = %"block_rt_59/7.lr.ph.split"
    br label %conditional_rt_52_join_block3336

  "block_rt_58/7":                                  ; preds = %"block_rt_123/8.split", %remainder_join12885
    %and_result2179 = and i256 %addition_result218222482, 1
    %addition_result2182 = or i256 %addition_result218222482, 0
    br label %remainder_join12885

  "block_rt_73/7.preheader":                        ; preds = %"block_rt_73/7.preheader.preheader", %"block_rt_123/8.split"
    %and_result58612176722479 = phi i256 [ 0, %"block_rt_123/8.split" ], [ 1, %"block_rt_73/7.preheader.preheader" ]
    %1 = zext i8 0 to i256
    switch i256 %1, label %conditional_rt_74_join_block6475.preheader [
      i256 1, label %"block_rt_123/7.loopexit1"
      i256 0, label %"block_rt_123/8.split"
    ]

  conditional_rt_74_join_block6475.preheader:       ; preds = %"block_rt_73/7.preheader"
    br label %conditional_rt_74_join_block6475

  "block_rt_80/7.split.split.split":                ; preds = %"block_rt_81/7"
    %comparison_result6468 = icmp ugt i256 %stack_var_013.221721, 0
    br i1 %comparison_result6468, label %"block_rt_123/8.split", label %conditional_rt_74_join_block6475

  "block_rt_81/7":                                  ; preds = %conditional_rt_89_join_block7784
    br i1 %comparison_result7009.not, label %"block_rt_80/7.split.split.split", label %remainder_join12901

  "block_rt_97/7":                                  ; preds = %conditional_rt_89_join_block7784
    ret void

  "block_rt_123/7.loopexit":                        ; preds = %conditional_rt_89_join_block7784
    br label %"block_rt_123/7"

  "block_rt_123/7.loopexit1":                       ; preds = %"block_rt_73/7.preheader"
    br label %"block_rt_123/7"

  "block_rt_123/7.loopexit3":                       ; preds = %conditional_rt_45_join_block2670
    br label %"block_rt_123/7"

  "block_rt_123/7":                                 ; preds = %"block_rt_59/7.lr.ph.split", %"block_rt_123/7.loopexit3", %"block_rt_123/7.loopexit1", %"block_rt_123/7.loopexit"
    %stack_var_007.0 = phi i256 [ 1, %"block_rt_123/7.loopexit" ], [ 50, %"block_rt_123/7.loopexit1" ], [ 0, %"block_rt_123/7.loopexit3" ], [ 50, %"block_rt_59/7.lr.ph.split" ]
    %and_result1807 = and i256 %stack_var_007.0, 1
    %stack_var_004.122011.be = or i256 %stack_var_004.1220116, 1
    br label %conditional_rt_20_join_block

  "block_rt_123/7.thread":                          ; preds = %conditional_rt_20_join_block
    unreachable

  "block_rt_123/8.split":                           ; preds = %"block_rt_80/7.split.split.split", %"block_rt_73/7.preheader"
    %comparison_result6061 = icmp ugt i256 %and_result58612176722479, 0
    br i1 %comparison_result6061, label %"block_rt_58/7", label %"block_rt_73/7.preheader"

  conditional_rt_20_join_block:                     ; preds = %"block_rt_123/7", %entry
    %stack_var_004.1220116 = phi i256 [ %stack_var_004.122011.be, %"block_rt_123/7" ], [ 0, %entry ]
    %stack_var_003.122010 = phi i256 [ %and_result1807, %"block_rt_123/7" ], [ 0, %entry ]
    %comparison_result1783 = icmp eq i256 %stack_var_003.122010, 0
    br i1 %comparison_result1783, label %"block_rt_123/7.thread", label %conditional_rt_22_join_block

  conditional_rt_22_join_block:                     ; preds = %conditional_rt_20_join_block
    br label %conditional_rt_45_join_block2670

  conditional_rt_45_join_block2670:                 ; preds = %conditional_rt_22_join_block, %"block_rt_46/7"
    %stack_var_009.022000 = phi i256 [ %addition_result2803, %"block_rt_46/7" ], [ 0, %conditional_rt_22_join_block ]
    %2 = zext i8 %trunc8 to i256
    switch i256 %2, label %conditional_rt_52_join_block3336.preheader [
      i256 1, label %"block_rt_46/7"
      i256 0, label %"block_rt_123/7.loopexit3"
    ]

  conditional_rt_52_join_block3336.preheader:       ; preds = %conditional_rt_45_join_block2670
    br label %conditional_rt_52_join_block3336

  conditional_rt_52_join_block3336:                 ; preds = %"block_rt_64/7.us21835", %remainder_join12885, %"block_rt_59/7.lr.ph.split", %conditional_rt_52_join_block3336.preheader
    br i1 %comparison_result7009.not, label %"block_rt_46/7", label %"block_rt_59/7.lr.ph.split"

  conditional_rt_74_join_block6475:                 ; preds = %conditional_rt_74_join_block6475.preheader, %"block_rt_80/7.split.split.split"
    %stack_var_013.221721 = phi i256 [ 0, %"block_rt_80/7.split.split.split" ], [ 1, %conditional_rt_74_join_block6475.preheader ]
    br label %remainder_join12901

  conditional_rt_89_join_block7784:                 ; preds = %remainder_join12901, %conditional_rt_89_join_block7784
    %3 = zext i8 %trunc to i256
    switch i256 %3, label %"block_rt_97/7" [
      i256 0, label %conditional_rt_89_join_block7784
      i256 32, label %"block_rt_81/7"
      i256 8, label %"block_rt_123/7.loopexit"
    ]

  remainder_join12885:                              ; preds = %remainder_join12885.preheader, %"block_rt_58/7"
    %addition_result218222482 = phi i256 [ %and_result2179, %"block_rt_58/7" ], [ 0, %remainder_join12885.preheader ]
    %4 = zext i8 0 to i256
    switch i256 %4, label %"block_rt_73/7.preheader.preheader" [
      i256 0, label %"block_rt_58/7"
      i256 1, label %conditional_rt_52_join_block3336
    ]

  "block_rt_73/7.preheader.preheader":              ; preds = %remainder_join12885
    br label %"block_rt_73/7.preheader"

  remainder_join12901:                              ; preds = %conditional_rt_74_join_block6475, %"block_rt_81/7"
    br label %conditional_rt_89_join_block7784
  }

...
---
name:            main
alignment:       1
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
isOutlined:      false
debugInstrRef:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: gpr, preferred-register: '' }
  - { id: 1, class: gpr, preferred-register: '' }
  - { id: 2, class: gpr, preferred-register: '' }
  - { id: 3, class: gpr, preferred-register: '' }
  - { id: 4, class: gpr, preferred-register: '' }
  - { id: 5, class: gpr, preferred-register: '' }
  - { id: 6, class: gpr, preferred-register: '' }
  - { id: 7, class: gpr, preferred-register: '' }
  - { id: 8, class: gpr, preferred-register: '' }
  - { id: 9, class: gpr, preferred-register: '' }
  - { id: 10, class: gpr, preferred-register: '' }
  - { id: 11, class: gpr, preferred-register: '' }
  - { id: 12, class: gpr, preferred-register: '' }
  - { id: 13, class: gpr, preferred-register: '' }
  - { id: 14, class: gpr, preferred-register: '' }
  - { id: 15, class: gpr, preferred-register: '' }
  - { id: 16, class: gpr, preferred-register: '' }
  - { id: 17, class: gpr, preferred-register: '' }
  - { id: 18, class: gpr, preferred-register: '' }
  - { id: 19, class: gpr, preferred-register: '' }
  - { id: 20, class: gpr, preferred-register: '' }
  - { id: 21, class: gpr, preferred-register: '' }
  - { id: 22, class: gpr, preferred-register: '' }
  - { id: 23, class: gpr, preferred-register: '' }
  - { id: 24, class: gpr, preferred-register: '' }
  - { id: 25, class: gpr, preferred-register: '' }
  - { id: 26, class: gpr, preferred-register: '' }
  - { id: 27, class: gpr, preferred-register: '' }
  - { id: 28, class: gpr, preferred-register: '' }
  - { id: 29, class: gpr, preferred-register: '' }
  - { id: 30, class: gpr, preferred-register: '' }
  - { id: 31, class: gpr, preferred-register: '' }
  - { id: 32, class: gpr, preferred-register: '' }
  - { id: 33, class: gpr, preferred-register: '' }
  - { id: 34, class: gpr, preferred-register: '' }
  - { id: 35, class: gpr, preferred-register: '' }
  - { id: 36, class: gpr, preferred-register: '' }
  - { id: 37, class: gpr, preferred-register: '' }
  - { id: 38, class: gpr, preferred-register: '' }
  - { id: 39, class: gpr, preferred-register: '' }
  - { id: 40, class: gpr, preferred-register: '' }
  - { id: 41, class: gpr, preferred-register: '' }
  - { id: 42, class: gpr, preferred-register: '' }
  - { id: 43, class: gpr, preferred-register: '' }
  - { id: 44, class: gpr, preferred-register: '' }
  - { id: 45, class: gpr, preferred-register: '' }
  - { id: 46, class: gpr, preferred-register: '' }
  - { id: 47, class: gpr, preferred-register: '' }
  - { id: 48, class: gpr, preferred-register: '' }
  - { id: 49, class: gpr, preferred-register: '' }
  - { id: 50, class: gpr, preferred-register: '' }
  - { id: 51, class: gpr, preferred-register: '' }
  - { id: 52, class: gpr, preferred-register: '' }
  - { id: 53, class: gpr, preferred-register: '' }
  - { id: 54, class: gpr, preferred-register: '' }
  - { id: 55, class: gpr, preferred-register: '' }
  - { id: 56, class: gpr, preferred-register: '' }
  - { id: 57, class: gpr, preferred-register: '' }
  - { id: 58, class: gpr, preferred-register: '' }
  - { id: 59, class: gpr, preferred-register: '' }
  - { id: 60, class: gpr, preferred-register: '' }
  - { id: 61, class: gpr, preferred-register: '' }
  - { id: 62, class: gpr, preferred-register: '' }
  - { id: 63, class: gpr, preferred-register: '' }
  - { id: 64, class: gpr, preferred-register: '' }
  - { id: 65, class: gpr, preferred-register: '' }
  - { id: 66, class: gpr, preferred-register: '' }
  - { id: 67, class: gpr, preferred-register: '' }
  - { id: 68, class: gpr, preferred-register: '' }
  - { id: 69, class: gpr, preferred-register: '' }
  - { id: 70, class: gpr, preferred-register: '' }
  - { id: 71, class: gpr, preferred-register: '' }
  - { id: 72, class: gpr, preferred-register: '' }
  - { id: 73, class: gpr, preferred-register: '' }
  - { id: 74, class: gpr, preferred-register: '' }
  - { id: 75, class: gpr, preferred-register: '' }
liveins:
  - { reg: '$arguments', virtual-reg: '' }
  - { reg: '$value_stack', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 0
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  isCalleeSavedInfoValid: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
entry_values:    []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo:
  isStackified:    false
  numberOfParameters: 4
  hasPushDeployAddress: false
body:             |
  ; CHECK-LABEL: name: main
  ; CHECK: bb.0.entry:
  ; CHECK-NEXT:   successors: %bb.1(0x80000000)
  ; CHECK-NEXT:   liveins: $arguments, $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   SWAP1_S
  ; CHECK-NEXT:   SWAP4_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   PUSH1_S i256 255
  ; CHECK-NEXT:   AND_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT:   DUP5_S
  ; CHECK-NEXT:   EQ_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   PUSH32_S i256 57896044618658097711785492504343953926634992332820282019728792003956564819967
  ; CHECK-NEXT:   AND_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   PUSH1_S i256 4
  ; CHECK-NEXT:   DUP4_S
  ; CHECK-NEXT:   EQ_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   PUSH1_S i256 6
  ; CHECK-NEXT:   DUP5_S
  ; CHECK-NEXT:   EQ_S
  ; CHECK-NEXT:   SWAP1_S
  ; CHECK-NEXT:   PUSH1_S i256 255
  ; CHECK-NEXT:   AND_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   PUSH1_S i256 8
  ; CHECK-NEXT:   DUP5_S
  ; CHECK-NEXT:   EQ_S
  ; CHECK-NEXT:   SWAP8_S
  ; CHECK-NEXT:   PUSH1_S i256 32
  ; CHECK-NEXT:   DUP6_S
  ; CHECK-NEXT:   EQ_S
  ; CHECK-NEXT:   PUSH1_S i256 128
  ; CHECK-NEXT:   MSTORE_S
  ; CHECK-NEXT:   PUSH0_S
  ; CHECK-NEXT:   SWAP8_S
  ; CHECK-NEXT:   PUSH0_S
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.1.conditional_rt_20_join_block:
  ; CHECK-NEXT:   successors: %bb.43(0x00000000), %bb.2(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PseudoJUMP_UNLESS %bb.43
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.2.conditional_rt_22_join_block:
  ; CHECK-NEXT:   successors: %bb.3(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   DUP3_S
  ; CHECK-NEXT:   DUP8_S
  ; CHECK-NEXT:   DUP7_S
  ; CHECK-NEXT:   DUP4_S
  ; CHECK-NEXT:   PUSH0_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.3.conditional_rt_45_join_block2670:
  ; CHECK-NEXT:   successors: %bb.4(0x3efbefbf), %bb.5(0x41041041)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PseudoJUMP_UNLESS %bb.5
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.4:
  ; CHECK-NEXT:   successors: %bb.44(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PseudoJUMP %bb.44
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.5.conditional_rt_45_join_block2670:
  ; CHECK-NEXT:   successors: %bb.41(0x04000000), %bb.6(0x7c000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PseudoJUMP_UNLESS %bb.41
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.6:
  ; CHECK-NEXT:   successors: %bb.7(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   DUP7_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.7.conditional_rt_52_join_block3336:
  ; CHECK-NEXT:   successors: %bb.8(0x04000000), %bb.9(0x7c000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   DUP6_S
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT:   DUP7_S
  ; CHECK-NEXT:   AND_S
  ; CHECK-NEXT:   SWAP4_S
  ; CHECK-NEXT:   DUP5_S
  ; CHECK-NEXT:   PseudoJUMP_UNLESS %bb.9
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.8:
  ; CHECK-NEXT:   successors: %bb.44(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PseudoJUMP %bb.44
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.9:
  ; CHECK-NEXT:   successors: %bb.10(0x2a3677d4), %bb.11(0x55c9882c)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   DUP2_S
  ; CHECK-NEXT:   PseudoJUMP_UNLESS %bb.11
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.10:
  ; CHECK-NEXT:   successors: %bb.7(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   SWAP4_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PseudoJUMP %bb.7
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.11:
  ; CHECK-NEXT:   successors: %bb.12(0x3efbefbf), %bb.13(0x41041041)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PseudoJUMP_UNLESS %bb.13
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.12:
  ; CHECK-NEXT:   successors: %bb.7(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   DUP7_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PseudoJUMP %bb.7
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.13:
  ; CHECK-NEXT:   successors: %bb.14(0x04000001), %bb.15(0x7bffffff)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   DUP13_S
  ; CHECK-NEXT:   PUSH1_S i256 50
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   PseudoJUMPI %bb.15
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.14:
  ; CHECK-NEXT:   successors: %bb.42(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   SWAP10_S
  ; CHECK-NEXT:   SWAP1_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PseudoJUMP %bb.42
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.15.remainder_join12885.preheader:
  ; CHECK-NEXT:   successors: %bb.16(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   DUP7_S
  ; CHECK-NEXT:   SWAP4_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT:   SWAP4_S
  ; CHECK-NEXT:   DUP13_S
  ; CHECK-NEXT:   PUSH0_S
  ; CHECK-NEXT:   SWAP6_S
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.16.remainder_join12885:
  ; CHECK-NEXT:   successors: %bb.17(0x3efbefbf), %bb.18(0x41041041)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PseudoJUMP_UNLESS %bb.18
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.17:
  ; CHECK-NEXT:   successors: %bb.39(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   SWAP1_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT:   SWAP5_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PseudoJUMP %bb.39
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.18.remainder_join12885:
  ; CHECK-NEXT:   successors: %bb.19(0x04000000), %bb.20(0x7c000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PUSH0_S
  ; CHECK-NEXT:   PseudoJUMP_UNLESS %bb.20
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.19:
  ; CHECK-NEXT:   successors: %bb.7(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   SWAP5_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   DUP7_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PseudoJUMP %bb.7
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.20:
  ; CHECK-NEXT:   successors: %bb.21(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT:   DUP1_S
  ; CHECK-NEXT:   SWAP6_S
  ; CHECK-NEXT:   SWAP7_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   SWAP5_S
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.21:
  ; CHECK-NEXT:   successors: %bb.22(0x3efbefbf), %bb.23(0x41041041)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PseudoJUMP_UNLESS %bb.23
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.22:
  ; CHECK-NEXT:   successors: %bb.36(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   SWAP4_S
  ; CHECK-NEXT:   PseudoJUMP %bb.36
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.23:
  ; CHECK-NEXT:   successors: %bb.24(0x04000000), %bb.25(0x7c000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PUSH0_S
  ; CHECK-NEXT:   PseudoJUMP_UNLESS %bb.25
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.24:
  ; CHECK-NEXT:   successors: %bb.42(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   SWAP12_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PseudoJUMP %bb.42
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.25.conditional_rt_74_join_block6475.preheader:
  ; CHECK-NEXT:   successors: %bb.26(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   DUP12_S
  ; CHECK-NEXT:   SWAP1_S
  ; CHECK-NEXT:   DUP2_S
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.26.conditional_rt_74_join_block6475:
  ; CHECK-NEXT:   successors: %bb.27(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.27.conditional_rt_89_join_block7784:
  ; CHECK-NEXT:   successors: %bb.28(0x74b4b4b5), %bb.29(0x0b4b4b4b)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PseudoJUMPI %bb.29
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.28:
  ; CHECK-NEXT:   successors: %bb.27(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   DUP1_S
  ; CHECK-NEXT:   PseudoJUMP %bb.27
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.29.conditional_rt_89_join_block7784:
  ; CHECK-NEXT:   successors: %bb.40(0x2aaaaaae), %bb.30(0x55555552)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PseudoJUMPI %bb.40
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.30.conditional_rt_89_join_block7784:
  ; CHECK-NEXT:   successors: %bb.31(0x40000008), %bb.45(0x3ffffff8)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   SWAP13_S
  ; CHECK-NEXT:   SWAP15_S
  ; CHECK-NEXT:   SWAP14_S
  ; CHECK-NEXT:   SWAP13_S
  ; CHECK-NEXT:   PUSH1_S i256 128
  ; CHECK-NEXT:   MLOAD_S
  ; CHECK-NEXT:   PseudoJUMP_UNLESS %bb.45
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.31:
  ; CHECK-NEXT:   successors: %bb.33(0x04000000), %bb.32(0x7c000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   SWAP1_S
  ; CHECK-NEXT:   DUP15_S
  ; CHECK-NEXT:   SWAP16_S
  ; CHECK-NEXT:   SWAP14_S
  ; CHECK-NEXT:   SWAP15_S
  ; CHECK-NEXT:   DUP13_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   DUP6_S
  ; CHECK-NEXT:   PseudoJUMPI %bb.33
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.32:
  ; CHECK-NEXT:   successors: %bb.27(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   DUP1_S
  ; CHECK-NEXT:   PseudoJUMP %bb.27
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.33:
  ; CHECK-NEXT:   successors: %bb.34(0x04000000), %bb.35(0x7c000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PUSH0_S
  ; CHECK-NEXT:   SWAP1_S
  ; CHECK-NEXT:   PUSH0_S
  ; CHECK-NEXT:   EQ_S
  ; CHECK-NEXT:   PseudoJUMPI %bb.35
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.34:
  ; CHECK-NEXT:   successors: %bb.36(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   SWAP5_S
  ; CHECK-NEXT:   SWAP1_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PseudoJUMP %bb.36
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.35:
  ; CHECK-NEXT:   successors: %bb.26(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   DUP1_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   SWAP4_S
  ; CHECK-NEXT:   PseudoJUMP %bb.26
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.36:
  ; CHECK-NEXT:   successors: %bb.37(0x04000000), %bb.38(0x7c000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PUSH0_S
  ; CHECK-NEXT:   EQ_S
  ; CHECK-NEXT:   SWAP4_S
  ; CHECK-NEXT:   PUSH0_S
  ; CHECK-NEXT:   SWAP5_S
  ; CHECK-NEXT:   PseudoJUMPI %bb.38
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.37:
  ; CHECK-NEXT:   successors: %bb.39(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   SWAP1_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT:   SWAP4_S
  ; CHECK-NEXT:   PseudoJUMP %bb.39
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.38:
  ; CHECK-NEXT:   successors: %bb.21(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT:   PseudoJUMP %bb.21
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.39:
  ; CHECK-NEXT:   successors: %bb.16(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   DUP5_S
  ; CHECK-NEXT:   AND_S
  ; CHECK-NEXT:   SWAP3_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   SWAP1_S
  ; CHECK-NEXT:   DUP15_S
  ; CHECK-NEXT:   DUP13_S
  ; CHECK-NEXT:   DUP10_S
  ; CHECK-NEXT:   SWAP7_S
  ; CHECK-NEXT:   PseudoJUMP %bb.16
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.40:
  ; CHECK-NEXT:   successors: %bb.42(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT:   SWAP9_S
  ; CHECK-NEXT:   PseudoJUMP %bb.42
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.41:
  ; CHECK-NEXT:   successors: %bb.42(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PUSH0_S
  ; CHECK-NEXT:   SWAP9_S
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.42:
  ; CHECK-NEXT:   successors: %bb.1(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT:   OR_S
  ; CHECK-NEXT:   SWAP9_S
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT:   AND_S
  ; CHECK-NEXT:   PseudoJUMP %bb.1
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.43:
  ; CHECK-NEXT:   successors:
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.44:
  ; CHECK-NEXT:   successors: %bb.3(0x80000000)
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   PUSH1_S i256 1
  ; CHECK-NEXT:   OR_S
  ; CHECK-NEXT:   DUP8_S
  ; CHECK-NEXT:   DUP5_S
  ; CHECK-NEXT:   SWAP2_S
  ; CHECK-NEXT:   DUP4_S
  ; CHECK-NEXT:   DUP9_S
  ; CHECK-NEXT:   PseudoJUMP %bb.3
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT: bb.45:
  ; CHECK-NEXT:   liveins: $value_stack
  ; CHECK-NEXT: {{  $}}
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   POP_S
  ; CHECK-NEXT:   PseudoRET
  bb.0.entry:
    successors: %bb.1(0x80000000)
    liveins: $arguments, $value_stack

    %11:gpr = ARGUMENT 0, implicit $arguments
    %12:gpr = ARGUMENT 1, implicit $arguments
    %13:gpr = ARGUMENT 2, implicit $arguments
    %14:gpr = ARGUMENT 3, implicit $arguments
    %18:gpr = CONST_I256 i256 255, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %17:gpr = AND %18, %14, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %65:gpr = CONST_I256 i256 1, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %20:gpr = EQ %17, %65, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %26:gpr = CONST_I256 i256 57896044618658097711785492504343953926634992332820282019728792003956564819967, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %25:gpr = AND %26, %11, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %27:gpr = CONST_I256 i256 4, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %28:gpr = EQ %25, %27, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %29:gpr = CONST_I256 i256 6, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %30:gpr = EQ %25, %29, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %64:gpr = CONST_I256 i256 255, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %41:gpr = AND %64, %13, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %43:gpr = CONST_I256 i256 8, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %44:gpr = EQ %41, %43, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %45:gpr = CONST_I256 i256 32, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %46:gpr = EQ %41, %45, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %6:gpr = CONST_I256 i256 0, implicit-def dead $arguments
    %60:gpr = CONST_I256 i256 0, implicit-def dead $arguments

  bb.1.conditional_rt_20_join_block:
    successors: %bb.27(0x00000000), %bb.2(0x80000000)
    liveins: $value_stack

    JUMP_UNLESS %bb.27, %60, implicit-def dead $arguments

  bb.2.conditional_rt_22_join_block:
    successors: %bb.3(0x80000000)
    liveins: $value_stack

    %8:gpr = CONST_I256 i256 0, implicit-def dead $arguments

  bb.3.conditional_rt_45_join_block2670:
    successors: %bb.44(0x3efbefbf), %bb.4(0x41041041)
    liveins: $value_stack

    JUMP_UNLESS %bb.4, %20, implicit-def $arguments

  bb.44:
    successors: %bb.28(0x80000000)
    liveins: $value_stack

    JUMP %bb.28, implicit-def $arguments

  bb.4.conditional_rt_45_join_block2670:
    successors: %bb.25(0x04000000), %bb.33(0x7c000000)
    liveins: $value_stack

    JUMP_UNLESS %bb.25, %17, implicit-def dead $arguments

  bb.33:
    successors: %bb.5(0x80000000)
    liveins: $value_stack

  bb.5.conditional_rt_52_join_block3336:
    successors: %bb.45(0x04000000), %bb.6(0x7c000000)
    liveins: $value_stack

    %66:gpr = CONST_I256 i256 1, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %23:gpr = AND %12, %66, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    JUMP_UNLESS %bb.6, %23, implicit-def $arguments

  bb.45:
    successors: %bb.28(0x80000000)
    liveins: $value_stack

    JUMP %bb.28, implicit-def $arguments

  bb.6:
    successors: %bb.30(0x2a3677d4), %bb.7(0x55c9882c)
    liveins: $value_stack

    JUMP_UNLESS %bb.7, %28, implicit-def $arguments

  bb.30:
    successors: %bb.5(0x80000000)
    liveins: $value_stack

    JUMP %bb.5, implicit-def $arguments

  bb.7:
    successors: %bb.32(0x3efbefbf), %bb.8(0x41041041)
    liveins: $value_stack

    JUMP_UNLESS %bb.8, %30, implicit-def $arguments

  bb.32:
    successors: %bb.5(0x80000000)
    liveins: $value_stack

    JUMP %bb.5, implicit-def $arguments

  bb.8:
    successors: %bb.42(0x04000001), %bb.9(0x7bffffff)
    liveins: $value_stack

    %24:gpr = CONST_I256 i256 50, implicit-def dead $arguments
    JUMPI %bb.9, %25, implicit-def $arguments

  bb.42:
    successors: %bb.26(0x80000000)
    liveins: $value_stack

    JUMP %bb.26, implicit-def $arguments

  bb.9.remainder_join12885.preheader:
    successors: %bb.10(0x80000000)
    liveins: $value_stack

    %10:gpr = CONST_I256 i256 0, implicit-def dead $arguments

  bb.10.remainder_join12885:
    successors: %bb.40(0x3efbefbf), %bb.11(0x41041041)
    liveins: $value_stack

    %67:gpr = CONST_I256 i256 1, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    JUMP_UNLESS %bb.11, %67, implicit-def $arguments, implicit-def $value_stack, implicit $value_stack

  bb.40:
    successors: %bb.23(0x80000000)
    liveins: $value_stack

    JUMP %bb.23, implicit-def $arguments

  bb.11.remainder_join12885:
    successors: %bb.31(0x04000000), %bb.12(0x7c000000)
    liveins: $value_stack

    %68:gpr = CONST_I256 i256 0, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    JUMP_UNLESS %bb.12, %68, implicit-def $arguments, implicit-def $value_stack, implicit $value_stack

  bb.31:
    successors: %bb.5(0x80000000)
    liveins: $value_stack

    JUMP %bb.5, implicit-def $arguments

  bb.12:
    successors: %bb.13(0x80000000)
    liveins: $value_stack

    %2:gpr = CONST_I256 i256 1, implicit-def dead $arguments

  bb.13:
    successors: %bb.38(0x3efbefbf), %bb.14(0x41041041)
    liveins: $value_stack

    %69:gpr = CONST_I256 i256 1, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    JUMP_UNLESS %bb.14, %69, implicit-def $arguments, implicit-def $value_stack, implicit $value_stack

  bb.38:
    successors: %bb.22(0x80000000)
    liveins: $value_stack

    JUMP %bb.22, implicit-def $arguments

  bb.14:
    successors: %bb.43(0x04000000), %bb.15(0x7c000000)
    liveins: $value_stack

    %70:gpr = CONST_I256 i256 0, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    JUMP_UNLESS %bb.15, %70, implicit-def $arguments, implicit-def $value_stack, implicit $value_stack

  bb.43:
    successors: %bb.26(0x80000000)
    liveins: $value_stack

    JUMP %bb.26, implicit-def $arguments

  bb.15.conditional_rt_74_join_block6475.preheader:
    successors: %bb.16(0x80000000)
    liveins: $value_stack

    %62:gpr = CONST_I256 i256 1, implicit-def dead $arguments

  bb.16.conditional_rt_74_join_block6475:
    successors: %bb.17(0x80000000)
    liveins: $value_stack

    %9:gpr = COPY_I256 %62, implicit-def $arguments

  bb.17.conditional_rt_89_join_block7784:
    successors: %bb.36(0x74b4b4b5), %bb.18(0x0b4b4b4b)
    liveins: $value_stack

    JUMPI %bb.18, %41, implicit-def $arguments

  bb.36:
    successors: %bb.17(0x80000000)
    liveins: $value_stack

    JUMP %bb.17, implicit-def $arguments

  bb.18.conditional_rt_89_join_block7784:
    successors: %bb.24(0x2aaaaaae), %bb.19(0x55555552)
    liveins: $value_stack

    JUMPI %bb.24, %44, implicit-def dead $arguments

  bb.19.conditional_rt_89_join_block7784:
    successors: %bb.20(0x40000008), %bb.29(0x3ffffff8)
    liveins: $value_stack

    JUMP_UNLESS %bb.29, %46, implicit-def $arguments

  bb.20:
    successors: %bb.21(0x04000000), %bb.37(0x7c000000)
    liveins: $value_stack

    JUMPI %bb.21, %23, implicit-def $arguments

  bb.37:
    successors: %bb.17(0x80000000)
    liveins: $value_stack

    JUMP %bb.17, implicit-def $arguments

  bb.21:
    successors: %bb.39(0x04000000), %bb.35(0x7c000000)
    liveins: $value_stack

    %62:gpr = CONST_I256 i256 0, implicit-def dead $arguments
    %71:gpr = CONST_I256 i256 0, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %52:gpr = EQ %9, %71, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    JUMPI %bb.35, %52, implicit-def $arguments, implicit-def $value_stack, implicit $value_stack

  bb.39:
    successors: %bb.22(0x80000000)
    liveins: $value_stack

    JUMP %bb.22, implicit-def $arguments

  bb.35:
    successors: %bb.16(0x80000000)
    liveins: $value_stack

    JUMP %bb.16, implicit-def $arguments

  bb.22:
    successors: %bb.41(0x04000000), %bb.34(0x7c000000)
    liveins: $value_stack

    %53:gpr = CONST_I256 i256 0, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %54:gpr = EQ %2, %53, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %2:gpr = CONST_I256 i256 0, implicit-def dead $arguments
    JUMPI %bb.34, %54, implicit-def $arguments

  bb.41:
    successors: %bb.23(0x80000000)
    liveins: $value_stack

    JUMP %bb.23, implicit-def $arguments

  bb.34:
    successors: %bb.13(0x80000000)
    liveins: $value_stack

    JUMP %bb.13, implicit-def $arguments

  bb.23:
    successors: %bb.10(0x80000000)
    liveins: $value_stack

    %72:gpr = CONST_I256 i256 1, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %10:gpr = AND %10, %72, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    JUMP %bb.10, implicit-def $arguments

  bb.24:
    successors: %bb.26(0x80000000)
    liveins: $value_stack

    %24:gpr = CONST_I256 i256 1, implicit-def dead $arguments
    JUMP %bb.26, implicit-def $arguments

  bb.25:
    successors: %bb.26(0x80000000)
    liveins: $value_stack

    %24:gpr = CONST_I256 i256 0, implicit-def dead $arguments

  bb.26:
    successors: %bb.1(0x80000000)
    liveins: $value_stack

    %74:gpr = CONST_I256 i256 1, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %6:gpr = OR %6, %74, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %73:gpr = CONST_I256 i256 1, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %60:gpr = AND %24, %73, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    JUMP %bb.1, implicit-def $arguments

  bb.27:
    successors:
    liveins: $value_stack

  bb.28:
    successors: %bb.3(0x80000000)
    liveins: $value_stack

    %75:gpr = CONST_I256 i256 1, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    %8:gpr = OR %8, %75, implicit-def dead $arguments, implicit-def $value_stack, implicit $value_stack
    JUMP %bb.3, implicit-def $arguments

  bb.29:
    liveins: $value_stack

    RET implicit-def dead $arguments

...
