# RUN: llc -x mir -run-pass=eravm-fold-select -verify-machineinstrs < %s | FileCheck %s

# This file tests that combing select-with-zero with bit rotation

--- |

  target datalayout = "E-p:256:256-i256:256:256-S32-a:256:256"
  target triple = "eravm"

  define void @select_zero_bit_rol(i256 %0, i256 %1) { ret void }
  define void @select_zero_bit_rol_neg(i256 %0, i256 %1) { ret void }
  define void @select_zero_bit_ror(i256 %0, i256 %1) { ret void }
  define void @select_zero_bit_ror_neg(i256 %0, i256 %1) { ret void }

...
---
# CHECK-LABEL: select_zero_bit_rol
# CHECK-LABEL: bb.0:
# CHECK: %5:gr256 = ROLxrr_s i256 1, %1, 2, implicit %1(tied-def 0), implicit $flags
name:            select_zero_bit_rol
alignment:       1
tracksRegLiveness: true
registers:
  - { id: 0, class: gr256 }
  - { id: 1, class: gr256 }
  - { id: 2, class: gr256 }
  - { id: 3, class: gr256 }
  - { id: 4, class: gr256 }
  - { id: 5, class: gr256 }
  - { id: 6, class: gr256 }
liveins:
  - { reg: '$r1', virtual-reg: '%0' }
  - { reg: '$r2', virtual-reg: '%1' }
frameInfo:
  maxAlignment:    1
machineFunctionInfo: {}
body:             |
  bb.0:
    liveins: $r1, $r2

    %1:gr256 = COPY killed $r2
    %0:gr256 = COPY killed $r1
    dead %2:gr256 = SUBrrr_v %0, %1, i256 0, implicit-def $flags
    %3:gr256 = SELiir i256 1, i256 0, i256 2, implicit $flags
    %5:gr256 = ROLrrr_s %1, %3, 0
    $r1 = COPY killed %5
    RET implicit killed $r1
...
---
# CHECK-LABEL: select_zero_bit_rol_neg
# CHECK-LABEL: bb.0:
# CHECK: %3:gr256 = SELiir i256 1, i256 0, i256 2, implicit $flags
name:            select_zero_bit_rol_neg
alignment:       1
tracksRegLiveness: true
registers:
  - { id: 0, class: gr256 }
  - { id: 1, class: gr256 }
  - { id: 2, class: gr256 }
  - { id: 3, class: gr256 }
  - { id: 4, class: gr256 }
  - { id: 5, class: gr256 }
  - { id: 6, class: gr256 }
liveins:
  - { reg: '$r1', virtual-reg: '%0' }
  - { reg: '$r2', virtual-reg: '%1' }
frameInfo:
  maxAlignment:    1
machineFunctionInfo: {}
body:             |
  bb.0:
    liveins: $r1, $r2

    %1:gr256 = COPY killed $r2
    %0:gr256 = COPY killed $r1
    dead %2:gr256 = SUBrrr_v %0, %1, i256 0, implicit-def $flags
    %3:gr256 = SELiir i256 1, i256 0, i256 2, implicit $flags
    %5:gr256 = ROLrrr_s %3, %1, 0
    $r1 = COPY killed %5
    RET implicit killed $r1
...
---
# CHECK-LABEL: select_zero_bit_ror
# CHECK-LABEL: bb.0:
# CHECK: %5:gr256 = RORxrr_s i256 1, %1, 2, implicit %1(tied-def 0), implicit $flags
name:            select_zero_bit_ror
alignment:       1
tracksRegLiveness: true
registers:
  - { id: 0, class: gr256 }
  - { id: 1, class: gr256 }
  - { id: 2, class: gr256 }
  - { id: 3, class: gr256 }
  - { id: 4, class: gr256 }
  - { id: 5, class: gr256 }
  - { id: 6, class: gr256 }
liveins:
  - { reg: '$r1', virtual-reg: '%0' }
  - { reg: '$r2', virtual-reg: '%1' }
frameInfo:
  maxAlignment:    1
machineFunctionInfo: {}
body:             |
  bb.0:
    liveins: $r1, $r2

    %1:gr256 = COPY killed $r2
    %0:gr256 = COPY killed $r1
    dead %2:gr256 = SUBrrr_v %0, %1, i256 0, implicit-def $flags
    %3:gr256 = SELiir i256 1, i256 0, i256 2, implicit $flags
    %5:gr256 = RORrrr_s %1, %3, 0
    $r1 = COPY killed %5
    RET implicit killed $r1
...
---
# CHECK-LABEL: select_zero_bit_ror_neg
# CHECK-LABEL: bb.0:
# CHECK: %3:gr256 = SELiir i256 1, i256 0, i256 2, implicit $flags
name:            select_zero_bit_ror_neg
alignment:       1
tracksRegLiveness: true
registers:
  - { id: 0, class: gr256 }
  - { id: 1, class: gr256 }
  - { id: 2, class: gr256 }
  - { id: 3, class: gr256 }
  - { id: 4, class: gr256 }
  - { id: 5, class: gr256 }
  - { id: 6, class: gr256 }
liveins:
  - { reg: '$r1', virtual-reg: '%0' }
  - { reg: '$r2', virtual-reg: '%1' }
frameInfo:
  maxAlignment:    1
machineFunctionInfo: {}
body:             |
  bb.0:
    liveins: $r1, $r2

    %1:gr256 = COPY killed $r2
    %0:gr256 = COPY killed $r1
    dead %2:gr256 = SUBrrr_v %0, %1, i256 0, implicit-def $flags
    %3:gr256 = SELiir i256 1, i256 0, i256 2, implicit $flags
    %5:gr256 = RORrrr_s %3, %1, 0
    $r1 = COPY killed %5
    RET implicit killed $r1
...
