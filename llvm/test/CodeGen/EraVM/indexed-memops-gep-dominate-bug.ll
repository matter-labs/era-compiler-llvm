; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: llc -O3 < %s | FileCheck %s

target datalayout = "E-p:256:256-i256:256:256-S32-a:256:256"
target triple = "eravm"

define i256 @test(i256 %arg, ptr addrspace(1) %arg1, ptr addrspace(1) %arg2) {
; CHECK-LABEL: test:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    sub! r1, r0, r0
; CHECK-NEXT:    jump.eq @.BB0_6
; CHECK-NEXT:  ; %bb.1: ; %bb1
; CHECK-NEXT:    add 5, r0, r1
; CHECK-NEXT:    add 10, r0, r4
; CHECK-NEXT:    add r0, r0, r5
; CHECK-NEXT:    jump @.BB0_4
; CHECK-NEXT:  .BB0_2: ; %bb4
; CHECK-NEXT:    ; in Loop: Header=BB0_4 Depth=1
; CHECK-NEXT:    add r3, r6, r6
; CHECK-NEXT:    st.1 r6, r4
; CHECK-NEXT:    add! 1, r5, r0
; CHECK-NEXT:    add 1, r5, r5
; CHECK-NEXT:    jump.lt @.BB0_6
; CHECK-NEXT:  .BB0_4: ; %bb2
; CHECK-NEXT:    ; =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    sub.s! 100, r5, r0
; CHECK-NEXT:    shl.s 5, r5, r6
; CHECK-NEXT:    jump.le @.BB0_2
; CHECK-NEXT:  ; %bb.5: ; %bb3
; CHECK-NEXT:    ; in Loop: Header=BB0_4 Depth=1
; CHECK-NEXT:    add r2, r6, r6
; CHECK-NEXT:    st.1 r6, r1
; CHECK-NEXT:    add! 1, r5, r0
; CHECK-NEXT:    add 1, r5, r5
; CHECK-NEXT:    jump.lt @.BB0_6
; CHECK-NEXT:    jump @.BB0_4
; CHECK-NEXT:  .BB0_6: ; %bb7
; CHECK-NEXT:    add r0, r0, r1
; CHECK-NEXT:    ret
entry:
  %icmp1 = icmp eq i256 %arg, 0
  br i1 %icmp1, label %bb7, label %bb1

bb1:
  br label %bb2

bb2:
  %phi1 = phi i256 [ %add, %bb5 ], [ 0, %bb1 ]
  %icmp2 = icmp ugt i256 %phi1, 100
  br i1 %icmp2, label %bb3, label %bb4

bb3:
  %gep1 = getelementptr inbounds i256, ptr addrspace(1) %arg1, i256 %phi1
  store i256 5, ptr addrspace(1) %gep1, align 32
  br label %bb5

bb4:
  %gep2 = getelementptr inbounds i256, ptr addrspace(1) %arg2, i256 %phi1
  store i256 10, ptr addrspace(1) %gep2, align 32
  br label %bb5

bb5:
  %add = add i256 %phi1, 1
  %cmp3 = icmp eq i256 %add, 0
  br i1 %cmp3, label %bb6, label %bb2

bb6:
  br label %bb7

bb7:
  %phi2 = phi i256 [ 0, %entry ], [ %add, %bb6 ]
  ret i256 %phi2
}
