; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -O3 < %s | FileCheck %s

target datalayout = "E-p:256:256-i256:256:256-S32-a:256:256"
target triple = "eravm"

declare void @use(i256)

define i256 @test_small_imm_pos() {
; CHECK-LABEL: test_small_imm_pos:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    nop stack+=[1]
; CHECK-NEXT:    add 12345, r0, r1
; CHECK-NEXT:    add r1, r0, stack-[1] ; 32-byte Folded Spill
; CHECK-NEXT:    near_call r0, @use, @DEFAULT_UNWIND
; CHECK-NEXT:    add stack-[1], r0, r1 ; 32-byte Folded Reload
; CHECK-NEXT:    ret
entry:
  call void @use(i256 12345)
  ret i256 12345
}

define i256 @test_small_imm_neg() {
; CHECK-LABEL: test_small_imm_neg:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    nop stack+=[1]
; CHECK-NEXT:    sub.s 12345, r0, r1
; CHECK-NEXT:    add r1, r0, stack-[1] ; 32-byte Folded Spill
; CHECK-NEXT:    near_call r0, @use, @DEFAULT_UNWIND
; CHECK-NEXT:    add stack-[1], r0, r1 ; 32-byte Folded Reload
; CHECK-NEXT:    ret
entry:
  call void @use(i256 -12345)
  ret i256 -12345
}

define i256 @test_large_imm_pos() {
; CHECK-LABEL: test_large_imm_pos:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    add @CPI2_0[0], r0, r1
; CHECK-NEXT:    near_call r0, @use, @DEFAULT_UNWIND
; CHECK-NEXT:    add @CPI2_0[0], r0, r1
; CHECK-NEXT:    ret
entry:
  call void @use(i256 123456789)
  ret i256 123456789
}

define i256 @test_large_imm_neg() {
; CHECK-LABEL: test_large_imm_neg:
; CHECK:       ; %bb.0: ; %entry
; CHECK-NEXT:    add @CPI3_0[0], r0, r1
; CHECK-NEXT:    near_call r0, @use, @DEFAULT_UNWIND
; CHECK-NEXT:    add @CPI3_0[0], r0, r1
; CHECK-NEXT:    ret
entry:
  call void @use(i256 -123456789)
  ret i256 -123456789
}
