name: 'Build LLVM'
description: 'Builds LLVM framework'
inputs:
  enable-tests:
    description: "Enable tests."
    required: false
    default: 'false'
  enable-assertions:
    description: "Enable assertions."
    required: false
    default: 'true'
  debug:
    description: 'Build LLVM in debug mode.'
    required: false
    default: 'false'
  extra-args:
    description: 'Extra arguments to compile LLVM.'
    required: false
    default: ''
  target:
    description: 'Specific build target triplet.'
    required: false
    default: ''
  llvm-builder-version:
    description: 'Version of the LLVM builder to use.'
    required: false
    default: '1.0.25'
runs:
  using: "composite"
  steps:
    - name: Prepare environment
      if: runner.os == 'macOS'
      run: brew install cmake ninja
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}

    - name: Prepare ccache installation
      if: runner.os == 'Linux'
      shell: 'bash'
      run: apt update

    - name: Define build target
      id: build-target
      if: inputs.target != ''
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
      run: |
        rustup target add ${{ inputs.target }}
        echo "target=--target ${{ inputs.target }}" >> $GITHUB_OUTPUT

    - name: Install LLVM builder
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
      run: cargo install compiler-llvm-builder@${{ inputs.llvm-builder-version }}

    - name: Set up compiler cache
      uses: hendrikmuhs/ccache-action@v1.2
      env:
        CCACHE_BASEDIR: ${{ github.workspace }}
        CCACHE_NOHASHDIR: "true"
        CCACHE_COMPILERCHECK: "content"
      with:
        key: llvm-${{ github.event.repository.default_branch }}
        restore-keys: llvm-${{ github.event.repository.default_branch }}
        append-timestamp: false
        max-size: "2G"
        verbose: 2
        save: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v') }}

    - name: Build LLVM
      shell: ${{ runner.os == 'Windows' && 'msys2 {0}' || 'bash' }}
      env:
        CCACHE_BASEDIR: ${{ github.workspace }}
        CCACHE_NOHASHDIR: "true"
        CCACHE_COMPILERCHECK: "content"
        LIBSTDCPP_SOURCE_PATH: "C:/a/_temp/msys64/mingw64/lib/libstdc++.a"
      run: |
        [ "${{ inputs.enable-tests }}" != "" ] && ENABLE_TESTS="--enable-tests"
        [ "${{ inputs.enable-assertions }}" != "" ] && ENABLE_ASSERTIONS="--enable-assertions"
        [ "${{ inputs.extra-args }}" != "" ] && EXTRA_ARGS="--extra-args ${{ inputs.extra-args }}"
        zksync-llvm build --use-ccache ${ENABLE_TESTS} ${ENABLE_ASSERTIONS} ${EXTRA_ARGS}
