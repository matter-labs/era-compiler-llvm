name: Integration tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      llvm_build_type:
        description: "LLVM build type: debug | release"
        required: true
        default: "release"
      compiler_tester_branch:
        description: "compiler-tester branch"
        required: true
        default: "main"
      compiler_llvm_branch:
        description: "compiler-llvm branch"
        required: true
        default: "main"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  test:
    name: Integration tests
    runs-on: [ self-hosted, ci-runner-compiler ]
    container:
      image: matterlabs/llvm_runner:ubuntu22-llvm15-latest
      options: -m 110g
    steps:

      - name: Checkout compiler-tester
        uses: actions/checkout@v4
        with:
          repository: matter-labs/compiler-tester
          ref: ${{ github.event.inputs.compiler_tester_branch || 'main' }}
          submodules: recursive
          token: ${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}

      - name: Checkout LLVM
        uses: actions/checkout@v4
        with:
          path: "llvm"
          ref: ${{ github.event.inputs.compiler_llvm_branch || github.head_ref }}
          fetch-depth: 0

      - name: Build LLVM
        uses: ./llvm/.github/actions/build
        with:
          extra-args: "\\-DLLVM_ENABLE_WERROR=On \\-DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
          enable-tests: true
          debug: ${{ github.event.inputs.llvm_build_type || 'release' }}

      - name: Checking with clang-tidy-diff.py
        working-directory: llvm
        shell: bash
        run: |
          pwd
          echo $SHELL
          $SHELL --version
          clang-tidy-15 --version
          git status
          git branch
          set -euxo pipefail
          git diff -U0 remotes/origin/${{ github.event.repository.default_branch }} \
            | ./clang-tools-extra/clang-tidy/tool/clang-tidy-diff_Zegar.py \
              -p1 -clang-tidy-binary $(which clang-tidy) \
              -path ../target-llvm/build-final/compile_commands.json

      - name: Running Lit tests with default options
        run: |
          BINDIR=$(target-llvm/build-final/bin/llvm-config --bindir)
          ${BINDIR}/llvm-lit -vv -s './target-llvm/build-final/test' --xunit-xml-output test-results-default.xml

      - name: Running Lit EraVM tests with llc verification options
        env:
          LLC_OPTS:
            "--cgp-verify-bfi-updates \
            --compile-twice \
            --earlycse-debug-hash \
            --loop-distribute-verify \
            --machine-combiner-verify-pattern-order \
            --phicse-debug-hash \
            --reassociate-geps-verify-no-dead-code \
            --safepoint-ir-verifier-print-only \
            --scev-verify-ir \
            --tail-dup-verify \
            --unroll-verify-domtree \
            --verify-regalloc \
            --vplan-verify-hcfg \
            --march=eravm"
          XFAILS:
            "CodeGen/EraVM/memcpy-expansion.ll;\
             CodeGen/EraVM/flag-setting-set-implicit-flags.ll;\
             CodeGen/EraVM/indexed-ld-in-a-loop-bug.ll;\
             CodeGen/EraVM/machine-outliner.mir;\
             CodeGen/EraVM/machine-outliner-tail.mir;\
             CodeGen/EraVM/select_fold.mir;\
             CodeGen/EraVM/select_tie.mir;\
             CodeGen/EraVM/select-zero-bitrot.mir;\
             CodeGen/EraVM/select-zero-flags.mir;\
             CodeGen/EraVM/hoist-flag-setting.mir;\
             CodeGen/EraVM/fold-similar-instructions.mir"

        run: |
          BINDIR=$(target-llvm/build-final/bin/llvm-config --bindir)
          ${BINDIR}/llvm-lit -vv -s --xfail "${XFAILS}" "-Dllc=${BINDIR}/llc ${LLC_OPTS}" './llvm/llvm/test/CodeGen/EraVM/' \
            --xunit-xml-output test-results-llc.xml

      - name: Running Lit tests with opt verification options
        env:
          OPT_OPTS:
            "--cgp-verify-bfi-updates \
            --earlycse-debug-hash \
            --loop-distribute-verify \
            --machine-combiner-verify-pattern-order \
            --phicse-debug-hash \
            --scev-verify-ir \
            --tail-dup-verify \
            --unroll-verify-domtree \
            --verify-assumption-cache \
            --verify-cfg-preserved \
            --verify-cfiinstrs \
            --verify-coalescing \
            --verify-dom-info \
            --verify-loop-info \
            --verify-loop-lcssa \
            --verify-machine-dom-info \
            --verify-machineinstrs \
            --verify-memoryssa \
            --verify-misched \
            --verify-regalloc \
            --verify-scev-strict \
            --vplan-verify-hcfg \
            --march=eravm"
          XFAILS:
            "Transforms/LoopVectorize/vplan_hcfg_stress_test.ll;\
            Transforms/LoopFlatten/widen-iv2.ll;\
            Transforms/LoopFusion/simple.ll"
        run: |
          BINDIR=$(target-llvm/build-final/bin/llvm-config --bindir)
          ${BINDIR}/llvm-lit -vv -s --xfail "${XFAILS}" "-Dopt=${BINDIR}/opt ${OPT_OPTS}" './llvm/llvm/test/CodeGen/' \
            --xunit-xml-output test-results-opt.xml

      - name: Upload results (Linux)
        uses: EnricoMi/publish-unit-test-result-action@v2.12.0
        with:
          check_name: Lit Tests Results
          files: test-results-*.xml
          action_fail_on_inconclusive: true

      - name: Building and running the compiler tester
        id: compiler_tester_run
        env:
          RUST_BACKTRACE: "full"
        run: |
          export LLVM_SYS_150_PREFIX="$(pwd)/target-llvm/target-final"
          git config --global --add url."https://${{ secrets.ZKSYNC_ADMIN_BOT_ORG_REPO_WRITE }}:x-oauth-basic@github.com/".insteadOf https://github.com/
          cargo build --verbose --release --bin 'compiler-tester'
          cargo build --verbose --release --manifest-path /usr/local/cargo/git/checkouts/era-compiler-solidity-*/*/Cargo.toml --target-dir './target-zksolc/'
          cargo build --verbose --release --manifest-path /usr/local/cargo/git/checkouts/era-compiler-vyper-*/*/Cargo.toml --target-dir './target-zkvyper/'
          ./target/release/compiler-tester \
            --zksolc './target-zksolc/release/zksolc' \
            --zkvyper './target-zkvyper/release/zkvyper'

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          job_name: 'Integration tests' # required if job name is explicitly set
          fields: repo,commit,author,action,eventName,ref,workflow,job,took,pullRequest
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        if: always()
